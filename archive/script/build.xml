<!--L
   Copyright Ekagra Software Technologies Ltd.
   Copyright SAIC, SAIC-Frederick

   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/common-security-module/LICENSE.txt for details.
L-->

<project name="CSM_BUILD_ALL" default="all" basedir="..">

   <description>This build file is to build the CSM API, UPT, and RI.  If the build process fails, check which task it failed on.  If it failed on the &quot;BUILD_CSM_API&quot; task, make sure the api project can be built alone.  This also goes for the &quot;UPT&quot; and &quot;RI&quot; tasks, if they fail, then check the project specific builds.  This build file will create a local.properties file if one doesn't exist in the ${basedir} directory.  The user should check the local.properties file after it has been create to make sure the settings are correct.</description>

   <!-- private build properties, not to be changed by user -->
   <property name="LOCAL_PROP_FILE" location="local.properties"/>
    <property name="API_DIR" location="api"/>
   <property name="UPT_DIR" location="upt"/>
   <property name="RI_DIR" location="ri"/>
   <property name="API_BUILD_FILE" location="${API_DIR}/script/build.xml"/>
   <property name="UPT_BUILD_FILE" location="${UPT_DIR}/build.xml"/>
   <property name="RI_BUILD_FILE" location="${RI_DIR}/script/build.xml"/>
   <property name="API_JAR" location="${API_DIR}/build/csmapi.jar"/>
   <property name="UPT_WAR" location="${UPT_DIR}/dist/upt.war"/>
   <property name="RI_WAR" location="${RI_DIR}/build/csm-ri.war"/>
   <property name="BUILD" location="build"/>

   <target name="createLocalProperties" unless="haveLocalProperties" description="Creates a template local.properties file">
      <echo>Creating default local properties file</echo>
      <echo file="${LOCAL_PROP_FILE}">
# NOTE: Be sure to change all '\' to '/' or escape all '\' with '\\'

##########################
#Per computer settings
#Change these to suit your local build environment.



# End of per computer settings
##########################
      </echo>
   </target>

   <target name="all" depends="clean, init, build_CSM_API, build_CSM_UPT, build_CSM_RI, copy_binaries" description="The &quot;rebuild&quot; target will clean products of the previous build, rebuild the CSM API, CSM UPT, and CSM RI projects, change the default config files to use settings from your local.properties file." />

   <target name="clean" description="Deletes the ${BUILD} directory and calls &quot;clean&quot; on the other projects.">
      <ant antfile="${API_BUILD_FILE}" inheritAll="false" target="clean"/>
      <ant antfile="${UPT_BUILD_FILE}" inheritAll="false" target="clean"/>
      <ant antfile="${RI_BUILD_FILE}" inheritAll="false" target="clean"/>
      <delete dir="${BUILD}"/>
   </target>
  
   <target name="init">
      <mkdir dir="${BUILD}"/>
      <available file="${LOCAL_PROP_FILE}" property="haveLocalProperties"/>
      <antcall target="createLocalProperties"/>
      <property file="${LOCAL_PROP_FILE}"/>
   </target>

   <target name="build_CSM_API" depends="init">
      <ant antfile="${API_BUILD_FILE}" inheritAll="false">
       </ant>
   </target>

   <target name="build_CSM_UPT" depends="init">
      <ant antfile="${UPT_BUILD_FILE}" inheritAll="false">
         </ant>
   </target>

   <target name="build_CSM_RI" depends="init">
      <ant antfile="${RI_BUILD_FILE}" inheritAll="false">
      </ant>
   </target>

   <target name="copy_binaries" depends="build_CSM_API,build_CSM_UPT,build_CSM_RI" >
	  <copy file="${RI_WAR}" todir="${BUILD}" overwrite="true"/>
	  <copy file="${UPT_WAR}" todir="${BUILD}" overwrite="true"/>
	  <copy file="${API_JAR}" todir="${BUILD}" overwrite="true"/>
   </target>

  
   
  
</project>