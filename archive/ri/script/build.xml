<!--L
   Copyright Ekagra Software Technologies Ltd.
   Copyright SAIC, SAIC-Frederick

   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/common-security-module/LICENSE.txt for details.
L-->

<!-- Build Script for NCI_Common_Security_Module_RI -->

<project name="NCI_Common_Security_Module_RI" default="package"
	basedir="..">

	<!-- Load variable definitions from local.properties -->
	<property name="localProperties" value="./local.properties" />
	<property file="${basedir}/script/local.properties" />
	
	<property name="SRC" location="src" />
	<property name="JAVA" location="src" />
	<property name="BUILD_DIR" location="build" />
	
	<property name="DOCS" location="${BUILD_DIR}/docs" />
	<property name="JAR_FILE" location="${BUILD_DIR}/csm-ri.jar" />
	<property name="CLASSES" location="${BUILD_DIR}/classes" />
	
	<property name="BUILD_SRC" location="${CLASSES}/src" />
	<property name="WAR_DIR" location="${BUILD_DIR}/wardir" />
	<property name="WEBAPP_DIR" location="webapp" />
	<property name="WEBINF" location="${WEBAPP_DIR}/WEB-INF" />

	<property name="WEBXML" location="${WEBINF}/web.xml" />
	<property name="WAR_WEBINF" location="${WAR_DIR}/WEB-INF" />

	<property name="LIB" location="${WAR_WEBINF}/lib" />
	<property name="JAR_DIR" location="${WAR_WEBINF}/lib" />
	
	<property name="WAR_CLASSES" location="${WAR_WEBINF}/classes" />
	<property name="WAR_RESOURCE" location="${WAR_CLASSES}/resources" />
	<property name="WEBAPP_WAR" location="${BUILD_DIR}/csm-ri.war" />



	<!-- Set up the classpath required to compile -->
	<path id="classpath">
		<fileset dir="webapp/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Initialize local.properties -->
	<target name="init">

		<!-- Has the file been created before -->
		<available file="${localProperties}"
			property="haveLocalProperties" />
		<antcall target="local.properties" />

		<property file="${localProperties}" />
	</target>

	<!-- Generate local.properties if needed -->
	<target name="local.properties" unless="haveLocalProperties">
		<echo>Generating new local.properties...</echo>
		<echo file="${localProperties}">
			# NOTE: Be sure to change all '\' to '/'

			########################## #Per computer settings

			PROPERTY_FILE=${localProperties}

			#J2EE specific options 
			J2EE_JAR=

			# End of per computer settings ##########################
		</echo>
	</target>

	<!-- Generate Java API Documentation -->
	<target name="javadoc" depends="init"
		description="Create Javadoc">
		<javadoc destdir="${DOCS}" author="true" version="true"
			use="true" package="true">

			<fileset dir="${SRC}">
				<include name="**/*.java" />
			</fileset>
			<classpath>
				<fileset dir="webapp/WEB-INF/lib">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="${J2EE_JAR}" />
			</classpath>
		</javadoc>
		<echo message="Javadoc complete" />
	</target>

	<!-- Create directories -->
	<target name="make_dirs" depends="init">

		<!-- Staging directory for compiling and packaging -->
		<mkdir dir="${BUILD_DIR}" />

		<!-- Classes directory -->
		<mkdir dir="${CLASSES}" />

		<!-- Source directory -->
		<mkdir dir="${BUILD_SRC}" />

		<!-- War file will be created using this directory -->
		<mkdir dir="${WAR_DIR}" />

		<!-- WEB-INF directory within the war file -->
		<mkdir dir="${WAR_WEBINF}" />

		<!-- WEB-INF directory within the war file -->
		<mkdir dir="${WAR_CLASSES}" />


		<!-- Directory for the jar files required by the app -->
		<mkdir dir="${JAR_DIR}" />

	</target>

	<!-- Compile the source code -->
	<target name="compile" depends="make_dirs">
		<echo>Compiling...</echo>

		<javac srcdir="${JAVA}" destdir="${CLASSES}"
			classpath="${J2EE_JAR}" classpathref="classpath" debug="on" />

		<!-- Copy config files -->
		<copy todir="${CLASSES}">
			<fileset dir="${JAVA}" includes="**/*.xml" />
			<fileset dir="${JAVA}" includes="**/*.properties" />
		</copy>
	</target>

	<!-- Copy source -->
	<target name="copysource">
		<echo>Copying source files...</echo>
		<copy todir="${BUILD_SRC}">
			<fileset dir="${JAVA}" includes="**/*.java" />
			<fileset dir="${JAVA}" includes="**/*.xml" />
			<fileset dir="${JAVA}" includes="**/*.properties" />

		</copy>
		<copy todir="${WAR_DIR}">
			<fileset dir="${WEBAPP_DIR}" includes="**/*.html" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.htm" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.jsp" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.java" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.xml" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.jpg" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.gif" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.css" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.tld" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.dtd" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.properties" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.jar" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.zip" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.doc" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.pdf" />
			<fileset dir="${WEBAPP_DIR}" includes="**/*.xsd" />

		</copy>
		<copy todir="${WAR_CLASSES}">
			<fileset dir="${JAVA}" includes="hibernate.cfg.xml" />
		</copy>
	</target>

	<!-- Package compiled classes into a jar -->
	<target name="jar" depends="compile,copysource">
		<echo>Packaging classes...</echo>
		<jar jarfile="${CLASSES}/csm-ri.jar" basedir="${CLASSES}" />
	</target>

	<!-- Copy jars -->
	<target name="copyjars">
		<echo>Copying jar files...</echo>
		<copy todir="${JAR_DIR}">
			<fileset dir="${LIB}" includes="**/*.jar" />
			<fileset dir="${LIB}" includes="**/*.zip" />
		</copy>
	</target>

	<!-- Package the web application -->
	<target name="package" depends="jar,javadoc,copyjars">
		<echo>Packageing application...</echo>
		<copy todir="${WAR_WEBINF}" file="${WEBXML}" />
		<war destfile="${WEBAPP_WAR}" webxml="${WAR_WEBINF}/web.xml"
			basedir="${WAR_DIR}" />
	</target>

	<!-- Remove everything created by the previous build -->
	<target name="clean" depends="init">
		<delete dir="${BUILD_DIR}" />
	</target>

</project>
