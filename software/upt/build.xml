<project name="csm-upt" default="run" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<description>CSM UPT Project Build File</description>

	<property name="ivy.settings.dir" value="${basedir}/../common" />
	<property name="common.dir" value="${basedir}/../" />
	<property name="local.repo.dir" value="${common.dir}/local-ivy-repo" />
	<property name="global.ivy.settings.file" location="${common.dir}/common/ivysettings.xml" />

	<!-- set global properties for this build -->
	<property name="src.dir" location="webapp/src" />
	<property name="lib.dir" value="${common.dir}/lib/" />

	<!-- This will be removed once all jars are retrieved from Ivy -->
	<property name="app.name"		value="upt" />
	<property name="app.path"		value="/${app.name}" />
	<property name="base.lib.dir"	value="../lib" />
	<property name="web.dir"		value="${basedir}/webapp/public_html" />
	<property name="webinf.dir"		value="${web.dir}/WEB-INF" />
	<property name="local.lib.dir"	value="${webinf.dir}/lib" />
	<property name="otherlib.dir"	value="otherlib" />
	<property name="build.dir"		value="build" />
	<property name="classes.dir"	value="${webinf.dir}/classes" />
	<property name="dist.dir"			value="dist" />
	<property name="resources"		value="resources" />
	<property name="common.resources" value="../common/resources/jboss-conf" />
	<property name="jar.name"		value="csmapi.jar" />
	<property name="war.file"		value="${dist.dir}/${app.name}.war" />

	<!-- Paths -->
	<path id="common.classpath">
		<fileset dir="${common.dir}/lib">
			<include name="ivy-core-2.0.0-beta2.jar" />
			<include name="ivy-2.0.0-beta2.jar" />
		</fileset>
	</path>

	<path id="project.compile.classpath">
		<fileset dir="${lib.dir}/upt/compile">
			<include name="*.jar" />
		</fileset>
		<!--<fileset dir="${local.lib.dir}">
			<include name="*.jar" />
			<exclude name="clmwebapp.jar"/>
			<exclude name="csmapi.jar"/>
			<exclude name="oscache-2.1.jar"/>

		</fileset>-->
		<fileset dir="${otherlib.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Task definitions -->
	<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="common.classpath" />

	<!-- Targets -->

	<target name="ivy-settings" depends="-init">
		<ivy:settings file="${global.ivy.settings.file}" />
	</target>

	<target name="ivy-compile" depends="ivy-settings" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="compile" />
		<ivy:retrieve pattern="${common.dir}/lib/upt/[conf]/[artifact]-[revision].[ext]" conf="compile" />
	</target>

	<target name="ivy-runtime" depends="ivy-settings" description="Updates the local ivy repository">
		<ivy:resolve refresh="true" conf="runtime" />
		<ivy:retrieve pattern="${common.dir}/lib/upt/[conf]/[artifact]-[revision].[ext]" conf="runtime" />
	</target>


	<target name="ivy-clean-cache" description="Cleans local Ivy cache">
		<delete dir="${user.home}/.ivy-${ant.project.name}" />
	</target>

	<target name="-pre-clean" depends="ivy-clean-cache" description="Performs all necessary clean-up before a build">
		<delete dir="${classes.dir}" quiet="false" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="-init" description="Initializes the system before a build">
		<!-- Create the time stamp -->
		<tstamp />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/WEB-INF" />
		<mkdir dir="${build.dir}/WEB-INF/classes" />
		<mkdir dir="${build.dir}/WEB-INF/tld" />
		<mkdir dir="${build.dir}/WEB-INF/conf" />
		<mkdir dir="${build.dir}/WEB-INF/lib" />
		<mkdir dir="${build.dir}/META-INF" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${lib.dir}/upt/compile" />
		<mkdir dir="${lib.dir}/upt/runtime" />
	</target>


	<target name="prepareBuild" depends="-init">

<!--		<copy todir="${build.dir}">
			<fileset dir="${web.dir}"/>
		</copy>
		<copy todir="${build.dir}/WEB-INF/">
			<fileset dir="${webinf.dir}"/>
		</copy>
		<copy todir="${build.dir}/WEB-INF/lib">
			<fileset dir="${lib.dir}" includes="**/*.jar"/>
		</copy>-->
		<delete quiet="true" file="${build.dir}/WEB-INF/lib/commons-logging.jar"/>
		<delete quiet="true" file="${build.dir}/WEB-INF/lib/commons-logging-1.0.4.jar"/>
		<delete quiet="true" file="${build.dir}/WEB-INF/lib/log4j-1.2.9.jar"/>
		<delete quiet="true" file="${build.dir}/WEB-INF/lib/jta.jar"/>
		<delete quiet="true" file="${build.dir}/WEB-INF/lib/clm.jar"/>		
		<delete quiet="true" file="${build.dir}/WEB-INF/lib/csmapi.jar"/>		
	</target>
	
	<target name="prepare" depends="prepareBuild"/>

	<target name="compile" depends="-pre-clean, ivy-compile,prepare" description="Compiles all the files in the project">
		<javac srcdir="${src.dir}" destdir="${build.dir}/WEB-INF/classes" debug="true" deprecation="true" classpathref="project.compile.classpath" />
		<copy todir="${build.dir}/WEB-INF/classes" >
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>
		<delete quiet="true" file="${build.dir}/WEB-INF/classes/gov/nih/nci/security/upt/resources/ApplicationSecurityConfig.xml"/>
		<delete quiet="true" file="${build.dir}/WEB-INF/classes/gov/nih/nci/security/upt/resources/csmupt.hibernate.cfg.xml"/>
		<delete quiet="true" file="${build.dir}/WEB-INF/classes/gov/nih/nci/security/upt/resources/security.hibernate.cfg.xml"/>
		<delete quiet="true" file="${build.dir}/WEB-INF/classes/gov/nih/nci/security/upt/resources/hibernate.properties"/>
		<delete quiet="true" file="${build.dir}/WEB-INF/classes/gov/nih/nci/security/upt/resources/ObjectStateLoggerConfig.xml"/>
	</target>


	<!-- split 'dist' to a) build war..b) copy runtime jars which upt is dependent on.-->
	<target name="dist" depends="compile,ivy-runtime" description="generate the distribution">

		<copy todir="${dist.dir}">
			<fileset dir="../common/resources/jboss-conf"/>
			<fileset dir="resources">
				<exclude name="ObjectStateLoggerConfig.xml" />
			</fileset>
			<fileset dir="../common/resources/db/mysql"/>
			<fileset dir="../common/resources/db/oracle"/>
			<fileset dir="../common/resources/db/postgresql"/>
			<fileset dir="../common/resources/db/sqlserver"/>						
		</copy>
		<jar jarfile="${war.file}" basedir="${build.dir}" />
		<copy todir="${dist.dir}" file="${common.dir}/lib/upt/runtime/clm-4.0.jar" />
	</target>

	<target name="clean" depends="dist" description="perform the clean up">
		<delete dir="${classes.dir}" />
	</target>

	<target name="-post-clean" description="Performs necessary clean-up after a build">
		<delete dir="${classes.dir}" quiet="false" />
		<delete dir="${build.dir}" quiet="false" />

	</target>

	<target name="run" depends="dist, -post-clean" description="Default project target" />

</project>
