<?xml version="1.0" encoding="utf-8" ?>
<!-- bda-build-template version 1.0.1 -->
<!--
$Id: install.xml 1593 2009-04-27 21:29:25Z saksass $
$HeadURL: https://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-build-template/software/build/install.xml $
-->

<project name="cgmmweb" default="install" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<import file="bda-master-install.xml" />

	<property name="cgmmweb.dir.dist" value="${basedir}/${cgmmweb.dist.relative.dir}" />
	<property name="cgmm.war.file" value="cgmmweb.war" />
	<property name="cgmmhostsample.war.file" value="cgmmhostweb.war" />	
        <property name="sync-gts.dir" location="${basedir}/${sync-gts.dist.relative.dir}"/>
        <property name="sync-gts.build.dir" location="${sync-gts.dir}/syncgts"/>
	<property name="cagrid-target.dir" location="${basedir}/cagrid-target"/>        
	
	<property name="cgmm-webapp.name" value="cgmmweb" />

	<target name="install" description="Wrapper scripts that calls all required targets to install the jboss container" unless="exclude.jboss" depends="
		-set:jboss:cgmmweb:application:url,
		common:jboss:init,
		common:init,
		install:jboss:init,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:validation:pre-install:ports,
		install:jboss:clean,
		install:jboss:binaries,
		install:jboss:cgmm-webapp,
		install:jboss:cgmm-webapp:configure,
		install:jboss:configure,
		install:jboss:configure:cgmm:mail-service,
		install:post:jboss,
		install:jboss:start,
		install:jboss:validation:post-install
		">
	</target>
<!--
	<target name="install" description="Wrapper scripts that calls all required targets to install the jboss container" unless="exclude.jboss" depends="
		-set:jboss:cgmmweb:application:url,
		common:jboss:init,
		common:init,
		install:jboss:init,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:validation:pre-install:ports,
		install:jboss:clean,
		install:jboss:binaries,
		install:jboss:cgmm-webapp,
		install:jboss:cgmm-webapp:configure,
		install:jboss:configure,
		install:jboss:configure:cgmm:log4j,
		install:jboss:configure:cgmm:mail-service,
		install:post:jboss,
		install:jboss:start,
		install:jboss:validation:post-install
		">
	</target>
-->	
	<!-- Upgrade with No Container Modification (NCM) -->
	<target name="upgrade-ncm:jboss" description="Wrapper target to call all targets required to upgrade jboss container." unless="exclude.jboss"
		depends="
		-set:jboss:cgmmweb:application:url,
		upgrade:jboss:init,
		common:init,
		common:jboss:init,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:validation:pre-install:ports,
		install:jboss:cgmm-webapp,
		install:jboss:cgmm-webapp:configure,
		install:jboss:configure:cgmm:mail-service,
		install:post:jboss,
		install:jboss:start,
		install:jboss:validation:post-install
		">
	</target>
	
	<target name="install:jboss:init" depends="common:init:pre">
		<!-- determine if port configurations or port lists are being called -->
		<if>
			<isset property="jboss.ncicb-standard.port-config"/>
			<then>
				<!-- Read some port properties from standard bindings file -->
				<echo message="Using JBoss NCICB Standard port configurations"/>
				<if>
					<equals arg1="${jboss.major.version}" arg2="4"/>
					<then>
						<property name="jboss.server.binding.template.location" value="${basedir}/${jboss-bindings.file}"/>
						<jboss-read-ports
							jboss.server.bindingfile.location="${jboss.server.binding.template.location}"
							/>
						<jboss-bindings-validate
							jboss.server.bindingfile.location="${jboss.server.binding.template.location}"
					/>
					</then>
					<elseif>
						<equals arg1="${jboss.major.version}" arg2="5"/>
						<then>
							<property name="jboss.server.bindingfile.location" value="${basedir}/${jboss-bindings.file}"/>
							<property name="temp.ejb.file" value="${temp.dir}/ejb3-connectors-jboss-beans.xml"/>
							<copy tofile="${temp.ejb.file}" file="${bda-utils.dir}/resource/jboss-5.1.0.GA/ejb3-connectors-jboss-beans.xml"/>
							<jboss51-bindings-nci
								jboss.server.bindingfile.location="${jboss.server.bindingfile.location}"
								/>
							<jboss51-read-ports-nci
								jboss.server.bindingfile.location="${jboss.server.bindingfile.location}"
								jboss.server.ejbfile.location="${temp.ejb.file}"
								/>
						</then>
					</elseif>
				</if>
				<echo message="http -${jboss.server.port} "/>
				<echo message="http -${jboss.server.jndi.port} "/>
                                <if>
                                        <equals arg1="${jboss.major.version}" arg2="4"/>
                                        <then>
                                                <property name="jboss.server.binding.template.location" value="${bda-utils.dir}/resource/${jboss.binaries.relative.dir}/bindings.xml"/>
                                        </then>
                                        <else>
                                                <property name="jboss.server.binding.template.location" value="${bda-utils.dir}/resource/${jboss.binaries.relative.dir}/bindings-jboss-beans.xml"/>

                                        </else>
                                </if>
				<properties-exist
					properties.list="jboss.server.jndi.port,jboss.server.port,jboss.server.ports.name"
					/>
			</then>
			<else>
				<!-- else ensure that all ports are set, since these will be removed from install.properties.template we will verify here.  They have to be removed so the validator works with or without the properties or we have to change the format of the file. -->
				<echo message="Using custom JBoss port configurations"/>
				<property name="jboss.server.binding.template.location" value="${bda-utils.dir}/resource/${jboss.binaries.relative.dir}/bindings.xml"/>
				<properties-exist
					properties.list="jboss.server.jndi.port,jboss.server.port,jboss.cobraorb.port,jboss.hajndi.port,jboss.hajrmi.port,jboss.jmx-rmi.port,jboss.messaging.port,jboss.pooledha.port,jboss.server.bind.port,jboss.server.rmi.port,jboss.service.rmiobject.port,jboss.snmp.port,jboss.snmp-trapd.port,jboss.web.service.port,jboss.unifiedinvoker.port,jboss.hajndi.auto.port,jboss.ssl.port,jboss.jms2.netty.port,jboss.jms2.netty-ssl.port,jboss.transaction.recovery.port,jboss.transaction.status.port,jboss.transaction.processid.port"
					/>
			</else>
		</if>
	</target>
	
	<target name="upgrade:jboss:readers:bda" if="jboss.exists">
		<properties-exist
			properties.list="application.base.path,jboss.home,jboss.server.name"
			/>
		<osfamily property="os.family"/>
		<if>
			<or>
				<equals arg1="${os.family}" arg2="unix"/>
				<equals arg1="${os.family}" arg2="mac"/>
			</or>
			<then>
				<property name="jboss.server.hostname" value="${env.HOSTNAME}"/>
			</then>
		</if>
		<if>
			<equals arg1="${os.family}" arg2="windows"/>
			<then>
				<property name="jboss.server.hostname" value="${env.COMPUTERNAME}"/>
			</then>
		</if>
		<jboss-read-bindings-file-location
			jboss.home="${read.jboss.home}"
			/>
		<jboss51-read-ports
			/>
		<read-property-from-properties-service
			jboss.home="${read.jboss.home}"
			property.name="property1"
			/>
		<read-property-from-properties-service
			jboss.home="${read.jboss.home}"
			property.name="property2"
			/>
			
		<jboss-read-external-hostname
                        jboss.home="${read.jboss.home}"
                        jboss.server-xml.file="${jboss.home}/server/${jboss.server.name}/deploy/jbossweb.sar/server.xml"
                        search.ssl.port="${jboss.ssl.port}"
                        />
                 <jboss-copy-log4j
                        jboss.home="${read.jboss.home}"
                        jboss.log4j.location="${jboss.home}/server/${jboss.server.name}/conf/jboss-log4j.xml"
                        copied.jboss.log4j.dir="${copied.jboss.log4j.dir}"
                        />

                <grid-read-index-url
                        grid.wsrf.dir="${read.jboss.home}/server/${jboss.server.name}/deploy/wsrf.war"
                        />
                <var name="jboss.grid.secure.dir" value="${working.dir}/keys/jboss"/>
                <jboss-read-grid-secure
                        jboss.home="${read.jboss.home}"
                        jboss.server-xml.file="${jboss.home}/server/${jboss.server.name}/deploy/jbossweb.sar/server.xml"
                        copied.keystore.dir="${jboss.grid.secure.dir}"
                        />
                <grid-read-poc
                        grid.wsrf.dir="${read.jboss.home}/server/${jboss.server.name}/deploy/wsrf.war"
                        grid.service.name="Sample"
                        />
			
	</target>


	<target name="install:jboss:cgmm-webapp" description="Deploy bda-blueprints-webapp and common libraries to jboss installation" unless="exclude.jboss" depends="common:init">
		<delete dir="${jboss.home}/server/${jboss.server.name}/tmp" />
		<delete dir="${jboss.home}/server/${jboss.server.name}/work" />
		<move file="${jboss.home}/server/${jboss.server.name}/log/server.log" tofile="${jboss.home}/server/${jboss.server.name}/log/server/log.${install.time}" failonerror="false" />

		<copy file="${cgmmweb.dir.dist}/${cgmm.war.file}" todir="${jboss.home}/server/${jboss.server.name}/deploy" overwrite="true" />
		<copy file="${cgmmweb.dir.dist}/${cgmmhostsample.war.file}" todir="${jboss.home}/server/${jboss.server.name}/deploy" overwrite="true" />
		<!--  Many NCI applications require clm for csm, so you can point this to where you have the version you want to use
		<copy file="${bda-utils.dir}/clm-3.2.jar" todir="${jboss.home}/server/${jboss.server.name}/lib" overwrite="true" />
		-->
		<copy file="${database.driver.file}" todir="${jboss.home}/server/${jboss.server.name}/lib" overwrite="true" />
	</target>

	<target name="-set:jboss:cgmmweb:application:url">
		<property name="jboss.application.url" value="http://${jboss.server.hostname}:${jboss.server.port}/${cgmm-webapp.name}"/>
	</target>

	<!-- configure target grid -->
	<target name="install:jboss:configure:target_grid">
		<!-- configure target grid -->
		<switch value="${target_grid}">
			<case value="training-1.3">
				<property name="SERVICE_NAME" value="caGrid Training" />
				<property name="CAGRID_AUTHENTICATION_SERVICE_URL" value="https://dorian.training.cagrid.org:8443/wsrf/services/cagrid/Dorian" />
				<property name="CAGRID_DORIAN_SERVICE_URL" value="${CAGRID_AUTHENTICATION_SERVICE_URL}" />
			</case>
			<case value="nci_dev-1.3">
				<property name="SERVICE_NAME" value="caGrid Dev" />
				<property name="CAGRID_AUTHENTICATION_SERVICE_URL" value="https://cbiovdev5035.nci.nih.gov:8443/wsrf/services/cagrid/Dorian" />
				<property name="CAGRID_DORIAN_SERVICE_URL" value="${CAGRID_AUTHENTICATION_SERVICE_URL}" />
			</case>
			<case value="nci_qa-1.3">
				<property name="SERVICE_NAME" value="caGrid QA" />
				<property name="CAGRID_AUTHENTICATION_SERVICE_URL" value="https://cagrid-dorian-qa.nci.nih.gov:8443/wsrf/services/cagrid/Dorian" />
				<property name="CAGRID_DORIAN_SERVICE_URL" value="${CAGRID_AUTHENTICATION_SERVICE_URL}" />
			</case>
			<case value="nci_stage-1.3">
				<property name="SERVICE_NAME" value="caGrid Staging 1.3" />
				<property name="CAGRID_AUTHENTICATION_SERVICE_URL" value="https://cagrid-dorian-stage.nci.nih.gov:8443/wsrf/services/cagrid/Dorian" />
				<property name="CAGRID_DORIAN_SERVICE_URL" value="${CAGRID_AUTHENTICATION_SERVICE_URL}" />
			</case>
			<case value="nci_prod-1.3">
				<property name="SERVICE_NAME" value="caGrid Prod 1.3" />
				<property name="CAGRID_AUTHENTICATION_SERVICE_URL" value="https://cagrid-dorian.nci.nih.gov:8443/wsrf/services/cagrid/Dorian" />
				<property name="CAGRID_DORIAN_SERVICE_URL" value="${CAGRID_AUTHENTICATION_SERVICE_URL}" />
			</case>
			<default>
				<echo message="target grid ${target_grid}." />
				<property name="SERVICE_NAME" value="${authentication-service-name}" />
				<property name="CAGRID_AUTHENTICATION_SERVICE_URL" value="${authentication-service-url}" />
				<property name="CAGRID_DORIAN_SERVICE_URL" value="${dorian-service-url}" />
			</default>
		</switch>

		<copy todir="${user.home}/.globus/certificates" overwrite="true">
			<fileset dir="${target_grid.dist.relative.dir}/${target_grid}/certificates">
			</fileset>
		</copy>
		<copy todir="${jboss.home}/server/default/cgmm_config" file="${target_grid.dist.relative.dir}/${target_grid}/sync-description.xml" overwrite="true"/>
		<copy todir="${jboss.home}/server/default/cgmm_config" overwrite="true">
			<fileset dir="${cgmmweb.dist.relative.dir}">
				<include name="*cgmm-properties.xml"/>
				<include name="*cgmm-properties.xsd"/>
			</fileset>
			<filterset refid="embedded.filterset"/>
			<filterset>
				<filtersfile file="${properties.file}"/>
				<filtersfile file="project.properties"/>
			</filterset>
			<filterset>
				<filter token="SERVICE_NAME" value="${SERVICE_NAME}"/>
				<filter token="CAGRID_AUTHENTICATION_SERVICE_URL" value="${CAGRID_AUTHENTICATION_SERVICE_URL}"/>
				<filter token="CAGRID_DORIAN_SERVICE_URL" value="${CAGRID_DORIAN_SERVICE_URL}"/>
			</filterset>
		</copy>
	</target>

	<target name="install:jboss:configure:cgmm:mail-service" description="Configure custom entries in mail-service.xml" unless="exclude.jboss" depends="common:jboss:init, common:init">
		<echo message="Configuring mailservice" />
		<property name="mail-service.file.name" value="mail-service.xml" />
		<copy file="${jboss.home}/server/${jboss.server.name}/deploy/${mail-service.file.name}" tofile="${jboss.home}/server/${jboss.server.name}/deploy/${mail-service.file.name}.pre" />

		<xmltask source="${jboss.home}/server/${jboss.server.name}/deploy/${mail-service.file.name}" dest="${jboss.home}/server/${jboss.server.name}/deploy/${mail-service.file.name}">
			<xmlcatalog refid="bda.xml.catalog" />
			<remove path="/server/mbean[@name='jboss:service=Mail']" />
			<insert path="/server" position="under">
				<![CDATA[
					<mbean code="org.jboss.mail.MailService" name="jboss:service=Mail">
				<attribute name="JNDIName">${mail.jndi.name}</attribute>
				<attribute name="User">${mail.service.user}</attribute>
				<attribute name="Password">${mail.service.password}</attribute>
				<attribute name="Configuration">
					<configuration>
						<property name="mail.transport.protocol" value="smtp"/>
						<property name="mail.smtp.host" value="${mail.smtp.server}"/>
						<!--        <property name="mail.smtp.port" value="465"/>-->
						<property name="mail.smtp.auth" value="${mail.smtp.auth}"/>
						<property name="mail.smtp.starttls.enable" value="${mail.smtp.starttls.enable}"/>
						<property name="mail.debug" value="${mail.debug}"/>
					</configuration>
				</attribute>
			</mbean>
				]]>
			</insert>
		</xmltask>
	</target>

	<target name="install:jboss:configure:log4j" description="Configure custom entries in system wide log4j" unless="exclude.jboss" depends="">
		<echo message="abstract install:jboss:configure:log4j target called" />
	</target>

	<target name="install:jboss:configure:cgmm:log4j" description="Configure custom entries in system wide log4j" unless="exclude.jboss" depends="common:jboss:init, common:init">
		<echo message="Configuring Log4J" />
		<property name="log4j.file.name" value="jboss-log4j.xml" />
		<copy file="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}" tofile="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}.pre" />
	
		<replaceregexp file="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}" byline="true" match="^(&lt;!DOCTYPE.*)" replace="&lt;!\-\-\1\-\-&gt;" />
		<if>
			<equals arg1="${enable.common.logging.module}" arg2="true" casesensitive="false" />
			<then>
				<switch value="${clm.database.type}">
					<case value="oracle">
						<!--<property name="clm.database.driver.file" value="${bda-utils.dir}/ojdbc14-10.2.0.4.0.jar" />-->
						<property name="clm.database.driver" value="oracle.jdbc.driver.OracleDriver" />
					</case>
					<case value="mysql">
						<!--<property name="clm.database.driver.file" value="${bda-utils.dir}/mysql-connector-java-5.1.13.jar" />-->
						<property name="clm.database.driver" value="com.mysql.jdbc.Driver" />
					</case>
					<case value="postgresql">
						<!--<property name="clm.database.driver.file" value="${bda-utils.dir}/postgresql-jdbc3-8.4-701.jar" />-->
						<property name="clm.database.driver" value="org.postgresql.Driver" />
					</case>
					<default>
						<fail message="Invalid database type ${clm.database.type}" />
					</default>
				</switch>
				<copy file="${database.driver.file}" todir="${jboss.home}/server/${jboss.server.name}/lib" overwrite="true" />
				<xmltask source="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}" dest="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}">
					<xmlcatalog refid="bda.xml.catalog" />
					<remove path="/log4j:configuration/appender[@name='CLM_APPENDER']" />
					<insert path="/log4j:configuration/appender[last()]" position="after">
						<![CDATA[
					<appender name="CLM_APPENDER" class="gov.nih.nci.logging.api.appender.jdbc.JDBCAppender">
						<param name="application" value="${APPLICATION_NAME}" />
						<param name="maxBufferSize" value="1" />
						<param name="dbDriverClass" value="${clm.database.driver}" />
						<param name="dbUrl" value="${clm.database.url}" />
						<param name="dbUser" value="${clm.database.user}" />
						<param name="dbPwd" value="${clm.database.password}" />
						<param name="useFilter" value="true" />
	
						<layout class="org.apache.log4j.PatternLayout">
							<param name="ConversionPattern" value=":: [%d{ISO8601}] %-5p %c{1}.%M() %x - %m%n" />
						</layout>
					</appender>
					]]>
		         </insert>
			</xmltask>
			<xmltask source="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}" dest="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}">
				<xmlcatalog refid="bda.xml.catalog" />
				<remove path="/log4j:configuration/category[@name='CGMM.Audit.Logging']" />
				<insert path="/log4j:configuration/root" position="before">
					<![CDATA[
					<category name="CGMM.Audit.Logging">
					<level value="info" />
					<appender-ref ref="CLM_APPENDER" />
				</category>
					]]>
				</insert>
			</xmltask>
		</then>
		</if>
		<xmltask source="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}" dest="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}">
		<xmlcatalog refid="bda.xml.catalog" />
		<remove path="/log4j:configuration/category[@name='COM.claymoresystems.ptls.SSLDebug']" />
		<insert path="/log4j:configuration/root" position="before">
			<![CDATA[
					<category name="COM.claymoresystems.ptls.SSLDebug">
			<priority value="OFF" />
		</category>
					]]>
				</insert>
		</xmltask>
		<!--<validate-log4j log4j.file="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}" />-->
		<replaceregexp file="${jboss.home}/server/${jboss.server.name}/conf/${log4j.file.name}" byline="true" match="^&lt;!\-\-(&lt;!DOCTYPE.*)\-\-&gt;" replace="\1" />
	</target>


	<target name="install:jboss:cgmm-webapp:configure" depends="install:jboss:configure:target_grid">
		<copy todir="${jboss.home}/server/default/cgmm_config" overwrite="true">
			<fileset dir="${cgmmweb.dist.relative.dir}">
				<include name="*ApplicationSecurityConfig.xml"/>
				<include name="*cgmm.login.config"/>
				<include name="*cgmmweb.hibernate.cfg.xml"/>
			</fileset>
			<filterset refid="embedded.filterset"/>
			<filterset>
			<filtersfile file="${properties.file}"/>
			<filtersfile file="project.properties"/>
			</filterset>
		</copy>
	
	<!-- This code is for updating properties.service.xml, make sure to add ${line.separator} after each property def as the property delimiter, if this is not included you will not get the desired results. If you do not use properties service.xml you can delete this code. -->
		<var name="property.block" value="gov.nih.nci.security.cgmm.syncgts.file=${jboss.home}/server/default/cgmm_config/sync-description.xml${line.separator}
					gov.nih.nci.security.cgmm.properties.file=${jboss.home}/server/default/cgmm_config/cgmm-properties.xml${line.separator}
					gov.nih.nci.security.configFile=${jboss.home}/server/default/cgmm_config/ApplicationSecurityConfig.xml${line.separator}
					gov.nih.nci.security.cgmm.login.config.file=${jboss.home}/server/default/cgmm_config/cgmm.login.config${line.separator}
					"/>
		<copy file="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml" tofile="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml.orig" overwrite="true" />
		<jboss-update-properties-service property.block="${property.block}" />
	</target>

	<target name="install:jboss:jbossweb-tomcat55:configure">
		<copy todir="${jboss.home}/server/default/lib" overwrite="true">
			<fileset dir="${cgmmweb.dir.dist}/jboss-default-lib-jars">
			</fileset>
		</copy>
		<copy todir="${jboss.home}/server/default/deploy/jbossweb-tomcat55.sar" overwrite="true">
			<fileset dir="${cgmmweb.dir.dist}/jbossweb-tomcat55-sar-jars">
			</fileset>
		</copy>
		<copy tofile="${jboss.home}/server/default/deploy/jbossweb-tomcat55.sar/cgmmapi.jar" file="${cgmmweb.dir.dist}/jars/jbossweb-tomcat55-sar-cgmmapi.jar" overwrite="true">
		</copy>
		<copy todir="${jboss.home}/server/default/lib" file="${cgmmweb.dir.dist}/clm-4.2.jar" overwrite="true">
		</copy>
	</target>
</project>
