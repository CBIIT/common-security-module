<?xml version="1.0" encoding="utf-8" ?>

<!--L
   Copyright Ekagra Software Technologies Ltd.
   Copyright SAIC, SAIC-Frederick

   Distributed under the OSI-approved BSD 3-Clause License.
   See http://ncip.github.com/common-security-module/LICENSE.txt for details.
L-->

<project name="csmupt-installer" default="upgrade" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<property name="jboss.grid.configure" value="false"/>
	<property name="tomcat.grid.configure" value="false"/>

	<import file="build-master-install.xml" />

	<!-- *-ds.xml and WAR -->
	<property name="upt.dist" value="${basedir}/${upt.dist.relative.dir}" />
	<property name="upt.app-sec-conf.file" value="ApplicationSecurityConfig.xml" />
	<property name="jboss.standalone" value="${jboss.base.path}/standalone" />
	<property name="jboss.standalone.deployment" value="${jboss.standalone}/deployments" />
	<property name="jboss.standalone.configuration" value="${jboss.standalone}/configuration" />
	<property name="upt-webapp.name" value="${upt.central.url.context.name}" />
	<tstamp>
	     <format property="time.stamp" pattern="yyyy_MM_dd_HH_mm_ss"/>
	</tstamp>

	<target name="-set:jboss:upt:application:url">
		<property name="jboss.application.url" value="http://${jboss.server.hostname}:${jboss.server.port}/${upt-webapp.name}"/>
	</target>

	<!-- Wrapper target to deploy JBOSS container -->
	
	<target name="install:jboss:configure:upt-ear" description="Deploy upt and common libraries to jboss installation" unless="exclude.jboss" depends="common:init,re-configure-ear,install:jboss:upt-ear:configure">
		<!-- added to ensure working.dirs are fresh for our install -->

		<copy file="${upt.dist}/${dist.relative.ear.dir}/${upt.ear.file}.ear" tofile="${upt.dist}/${dist.relative.ear.dir}/${upt.ear.file}.ear.${time.stamp}" overwrite="true" />
		
	</target>

	<target name="install:configure:eap" description="Deploy upt and common libraries to jboss installation" depends="common:init">
		<switch value="${database.type}">
			<case value="oracle">
				<mkdir dir="${jboss.home}/modules/oracle"/>
				<copy todir="${jboss.home}/modules/oracle" overwrite="true">
						<fileset dir="${basedir}/common/resources/jboss-eap/modules/oracle"/>
				</copy>
				<property name="database.driver.file" value="${build-utils.dir}/ojdbc14-10.2.0.3.0.jar"/>
				<property name="database.schema" value="${database.user}"/>
				<property name="db.driver.name" value="oracle"/>
				<property name="db.module.name" value="oracle"/>
				<property name="db.connection.url" value="jdbc:oracle:thin:@${upt.central.database.server}:${upt.central.database.port}:${upt.central.database.name}"/>
				<property name="db.type" value="oracle"/>
				<property name="db.driver.jar" value="ojdbc14-10.2.0.3.0.jar"/>
			</case>
			<case value="mysql">
				<mkdir dir="${jboss.home}/modules/mysql"/>
				<copy todir="${jboss.home}/modules/mysql" overwrite="true">
						<fileset dir="${basedir}/common/resources/jboss-eap/modules/mysql"/>
				</copy>
				<property name="database.driver.file" value="${build-utils.dir}/mysql-connector-java-5.1.32-bin.jar"/>
				<property name="db.driver.name" value="mysql"/>
				<property name="db.module.name" value="mysql"/>
				<property name="db.connection.url" value="jdbc:mysql://${upt.central.database.server}:${upt.central.database.port}/${upt.central.database.name}"/>
				<property name="db.type" value="mysql"/>
				<property name="db.driver.jar" value="mysql-connector-java-5.1.32-bin.jar"/>
			</case>
			<case value="postgresql">
				<mkdir dir="${jboss.home}/modules/postgresql"/>
				<copy todir="${jboss.home}/modules/postgresql" overwrite="true">
						<fileset dir="${basedir}/common/resources/jboss-eap/modules/postgresql"/>
				</copy>
				<property name="database.driver.file" value="${build-utils.dir}/postgresql-8.4-701.jdbc3.jar"/>
				<property name="db.driver.name" value="postgresql"/>
				<property name="db.module.name" value="postgresql"/>
				<property name="db.connection.url" value="jdbc:postgresql://${upt.central.database.server}:${upt.central.database.port}/${upt.central.database.name}"/>
				<property name="db.type" value="postgresql"/>
				<property name="db.driver.jar" value="postgresql-8.4-701.jdbc3.jar"/>
			</case>
			<default>
				<fail message="Invalid database type ${database.type}"/>
			</default>
		</switch>

		<filterset id="cli.filterset">
			<filter token="db.driver.name" value="${db.driver.name}" />
			<filter token="db.module.name" value="${db.module.name}" />
			<filter token="db.connection.url" value="${db.connection.url}" />
			<filter token="upt.version.database.name" value="${upt.central.database.name}" />
			<filter token="db.type" value="${db.type}" />
			<filter token="db.driver.jar" value="${db.driver.jar}" />
			<filter token="db.username" value="${upt.central.database.user}" />
			<filter token="db.password" value="${upt.central.database.password}" />
			<filter token="db.driver.class.name" value="${upt.central.database.driver.class}" />
			<filter token="jboss.home" value="${jboss.home}" />
		</filterset>
		<echo message="copy...${basedir}"/>		
		<copy todir="${jboss.home}/artifacts" overwrite="true">
			<fileset dir="${basedir}/common/resources/jboss-eap">
				<include name="*csmupt_jboss_eap_*.cli" />
			</fileset>
			<filterset>
				<filterset refid="cli.filterset"/>
				<filterset>
					<filtersfile file="${properties.file}"/>
					<filtersfile file="project.properties"/>
				</filterset>
			</filterset>
		</copy>
		<echo message="copy...done"/>		
		<mkdir dir="${jboss.home}/modules/gov"/>
		<mkdir dir="${jboss.home}/modules/org"/>
		<copy todir="${jboss.home}/modules/gov" overwrite="true">
				<fileset dir="${basedir}/common/resources/jboss-eap/modules/gov"/>
		</copy>
		<copy todir="${jboss.home}/modules/org" overwrite="true">
				<fileset dir="${basedir}/common/resources/jboss-eap/modules/org"/>
		</copy>
	</target>

	<target name="install:jboss:upt-ear:configure" depends="common:init">

		<available file="${jboss.home}/csmconfig/ApplicationSecurityConfig.xml" property="application.security.config.file.present"/>
		<if>
			<equals arg1="${application.security.config.file.present}" arg2="true"/>
			<then>
				<move file="${jboss.home}/csmconfig/ApplicationSecurityConfig.xml" tofile="${jboss.home}/csmconfig/ApplicationSecurityConfig.xml.orginal" overwrite="true"/>
			</then>
		</if>

		<filterset id="upt.filterset">
			<filter token="upt.version.database.url.prefix" value="${upt.central.database.url.prefix}" />
			<filter token="upt.version.database.server" value="${upt.central.database.server}" />
			<filter token="upt.version.database.port" value="${upt.central.database.port}" />
			<filter token="upt.version.database.name" value="${upt.central.database.name}" />
			<filter token="upt.version.database.user" value="${upt.central.database.user}" />
			<filter token="upt.version.database.password" value="${upt.central.database.password}" />
			<filter token="upt.version.database.dialect" value="${upt.central.database.dialect}" />
			<filter token="upt.version.database.driver.class" value="${upt.central.database.driver.class}" />
		</filterset>

		<filterset id="upt.context.filterset">
			<filter token="upt.context.name" value="csmupt" />
		</filterset>
		<copy todir="${jboss.home}/csmconfig" overwrite="true">
			<fileset dir="${basedir}/common/resources/jboss-eap/csmconfig">
				<include name="*ApplicationSecurityConfig.xml" />
			</fileset>
			<filterset>
				<filterset refid="upt.filterset"/>
				<filterset refid="upt.context.filterset"/>				
				<filterset>
					<filtersfile file="${properties.file}"/>
					<filtersfile file="project.properties"/>
				</filterset>
			</filterset>
		</copy>

	</target>
	
	<target name="install:jboss:configure:login:config" description="Configure login config software/common/resource/jboss-conf/login-config.block.xml" unless="exclude.jboss" depends="common:init">
		<configure-login-config 
				authentication.type="${upt.central.authentication.type}" application.context.name="${application.context.name}"
				database.driver="${upt.central.database.driver.class}" database.url="${upt.central.database.url}"
				database.user="${upt.central.database.user}" database.password="${upt.central.database.password}"
				database.encrypt.enabled="${upt.central.database.encrypt.enabled}" 
				ldaps.url="${upt.central.ldaps.url}" ldaps.basedn="${upt.central.ldaps.basedn}" ldaps.userid.label="${upt.central.ldaps.userid.label}"
				ldap.url="${upt.central.ldap.url}" ldap.searchable.base="${upt.central.ldap.searchable.base}"	ldap.userid.label="${upt.central.ldap.userid.label}"
				ldap.admin.user.name="${upt.central.ldap.admin.user.name}" ldap.admin.user.password="${upt.central.ldap.admin.user.password}"
		/>
	</target>

	<target name="install:jboss:configure:application:context"
			description="Configure application context config ${jboss.home}/csmconfig/ApplicationSecurityConfig.xml"
			unless="exclude.jboss" depends="common:init">
		<xmltask preservetype="true"
					source="${jboss.home}/csmconfig/ApplicationSecurityConfig.xml"
					dest="${jboss.home}/csmconfig/ApplicationSecurityConfig.xml">
			<xmlcatalog refid="build.xml.catalog" />
			<remove
					path="/*[local-name()='security-config']/*[local-name()='application-list']/text()" />
			<remove
					path="/*[local-name()='security-config']/*[local-name()='backwards-compatibility']/*[local-name()='upt-application-list']/text()" />
		</xmltask>
		<configure-application-context-application context.name="${upt.central.context.name}" hibernate.config.file="" />
		<configure-application-context-upt-application
				context.name="${upt.central.context.name}" url.context.name="${upt.central.url.context.name}"
				hibernate.config.file="${upt.central.hibernate.config.file}" />
	</target>
	
	<target name="install:upt:databases" description="Runs datbase creation scripts then calls uprade database." unless="exclude.database">
		<!--
		<copy todir="${os.temp.dir}/${project.name}" filtering="true" flatten="true" overwrite="true">
			<fileset dir="${db-install.dist.relative.dir}/db-upgrade/${upt.dist.relative.dir}">
				<include name="**/db-upgrade*.xml"/>
			</fileset>
			<filterset>
				<filter token="os.temp.dir" value="${os.temp.dir}" />
				<filter token="project.name" value="${project.name}" />
			</filterset>
		</copy>		
		-->
		<if>
			<or>
				<equals arg1="${upt.central.database.re-create}" arg2="true" />
				<equals arg1="${upt.central.database.drop-schema}" arg2="true" />
			</or>
			<then>
				<install-upt-database 	
							database.driver="${upt.central.database.driver.class}" database.system.url="${upt.central.database.system.url}" 
							database.server="${upt.central.database.server}"
							database.system.user="${upt.central.database.system.user}" database.system.password="${upt.central.database.system.password}" 
							database.url="${upt.central.database.url}" database.user="${upt.central.database.user}" 
							database.password="${upt.central.database.password}" database.version="${upt.central.database.version}" 
							database.name="${upt.central.database.name}" database.type="${upt.central.database.type}"
							database.schema="${upt.central.database.name}"  database.re-create="${upt.central.database.re-create}"
							database.drop-schema="${upt.central.database.drop-schema}"
							db.install.dir="${working.dir}/${db-install.dist.relative.dir}/db-install"
							database.dir.src="${db-install.dist.relative.dir}/db-install"
							db.install.create.oracle.file.list="${upt.central.db.install.create.oracle.file.list}"
							db.install.create.mysql.file.list="${upt.central.db.install.create.mysql.file.list}"
							db.install.create.postgresql.file.list="${upt.central.db.install.create.postgresql.file.list}"
							db.upgrade.non-central.file="${upt.central.db.upgrade.file}"
						/>
			</then>
		</if>
	</target>
	
	<macrodef name="configure-login-config">
		<attribute name="authentication.type" default="NOT SET" />
		<attribute name="application.context.name" default="NOT SET" />
		<attribute name="ldaps.url" default="NOT SET" />
		<attribute name="ldaps.basedn" default="NOT SET" />
		<attribute name="ldaps.userid.label" default="NOT SET" />
		<attribute name="ldap.url" default="NOT SET" />
		<attribute name="ldap.searchable.base" default="NOT SET" />
		<attribute name="ldap.userid.label" default="NOT SET" />
		<attribute name="ldap.admin.user.name" default="NOT SET" />
		<attribute name="ldap.admin.user.password" default="NOT SET" />
		<attribute name="database.driver" default="NOT SET" />
		<attribute name="database.url" default="NOT SET" />
		<attribute name="database.user" default="NOT SET" />
		<attribute name="database.password" default="NOT SET" />
		<attribute name="database.encrypt.enabled" default="NOT SET" />
		<attribute name="login.config.file" default="${jboss.home}/standalone/configuration/standalone.xml" />
			
		<sequential>
			<if>
				<equals arg1="@{authentication.type}" arg2="ldaps" />
				<then>
				<property name="loginmodule.type" value="gov.nih.nci.security.authentication.loginmodules.LDAPLoginModule"/>
				<property name="loginmodule.options" value='("ldapHost"=>"@{ldaps.url}"), ("ldapSearchableBase"=>"@{ldaps.basedn}"), ("ldapUserIdLabel"=>"@{ldaps.userid.label}")'/>
				<replaceregexp file="${jboss.home}/artifacts/csmupt_jboss_eap_conf.cli" match="@loginmodule.type@" replace="${loginmodule.type}" flags="g"/>
				<replaceregexp file="${jboss.home}/artifacts/csmupt_jboss_eap_conf.cli" match="@loginmodule.options@" replace="${loginmodule.options}" flags="g"/>
			</then>
			<elseif>
				<equals arg1="@{authentication.type}" arg2="ldap" />
				<then>
				<property name="loginmodule.type" value="gov.nih.nci.security.authentication.loginmodules.LDAPLoginModule"/>
				<property name="loginmodule.options" value='("ldapHost"=>"@{ldaps.url}"), ("ldapSearchableBase"=>"@{ldaps.basedn}"), ("ldapUserIdLabel"=>"@{ldaps.userid.label}"), ("ldapAdminUserName"=>"@{ldap.admin.user.name}"), ("ldapAdminPassword"=>"@{ldap.admin.user.password}")'/>
				<replaceregexp file="${jboss.home}/artifacts/csmupt_jboss_eap_conf.cli" match="@loginmodule.type@" replace="${loginmodule.type}" flags="g"/>
				<replaceregexp file="${jboss.home}/artifacts/csmupt_jboss_eap_conf.cli" match="@loginmodule.options@" replace="${loginmodule.options}" flags="g"/>
				</then>
			</elseif>
			<elseif>
				<equals arg1="@{authentication.type}" arg2="db" />
				<then>
				<property name="loginmodule.type" value="gov.nih.nci.security.authentication.loginmodules.RDBMSLoginModule"/>
				<property name="loginmodule.options" value='("driver"=>"@{database.driver}"), ("url"=>"@{database.url}"), ("user"=>"@{database.user}"), ("passwd"=>"@{database.password}"), ("query"=>"SELECT * FROM CSM_USER WHERE LOGIN_NAME=? and PASSWORD=?"), ("encryption-enabled"=>"@{database.encrypt.enabled}")'/>
				<replaceregexp file="${jboss.home}/artifacts/csmupt_jboss_eap_conf.cli" match="@loginmodule.type@" replace="${loginmodule.type}" flags="g"/>
				<replaceregexp file="${jboss.home}/artifacts/csmupt_jboss_eap_conf.cli" match="@loginmodule.options@" replace="${loginmodule.options}" flags="g"/>
				</then>
		</elseif>
		<else>
			<fail message="@{authentication.type} is not a valid authentiation type, please change to db or ldap and re-run the build." />
		</else>
		</if>	
		</sequential>
	</macrodef>
	
	<macrodef name="configure-application-context-application">
		<attribute name="context.name" default="NOT SET" />
		<attribute name="hibernate.config.file" default="NOT SET" />
		<attribute name="application.context.file" default="${jboss.home}/csmconfig/ApplicationSecurityConfig.xml" />
		
		<sequential>
			<xmltask preservetype="true" failWithoutMatch="true" source="@{application.context.file}" dest="@{application.context.file}">
			<xmlcatalog refid="build.xml.catalog" />
				<insert path="/*[local-name()='security-config']/*[local-name()='application-list']" position="under">
				<![CDATA[
					<application>
						<context-name>@{context.name}</context-name>
							<authentication>
								<authentication-provider-class/>
								<lockout-time>1800000</lockout-time>
								<allowed-login-time>60000</allowed-login-time>
								<allowed-attempts>3</allowed-attempts>
							</authentication>
							<authorization>
								<authorization-provider-class>
								</authorization-provider-class>
								<hibernate-config-file>@{hibernate.config.file}</hibernate-config-file>
							</authorization>
					</application>
				]]>
			    </insert>
	      </xmltask>		    
	  </sequential>
 	</macrodef>
			
	<macrodef name="configure-application-context-upt-application">
		<attribute name="context.name" default="NOT SET" />
		<attribute name="url.context.name" default="NOT SET" />
		<attribute name="hibernate.config.file" default="NOT SET" />
		<attribute name="application.context.file" default="${jboss.home}/csmconfig/ApplicationSecurityConfig.xml"/>
	
		<sequential>
			<xmltask preservetype="true" failWithoutMatch="true" source="@{application.context.file}" dest="@{application.context.file}">
			<xmlcatalog refid="build.xml.catalog" />
			<insert path="/*[local-name()='security-config']/*[local-name()='backwards-compatibility']/*[local-name()='upt-application-list']" position="under">
				<![CDATA[
				<upt-application>
					<context-name>@{context.name}</context-name>
					<url-context-name>@{url.context.name}</url-context-name>
					<authorization>
						<authorization-provider-class>String</authorization-provider-class>
						<hibernate-config-file>@{hibernate.config.file}</hibernate-config-file>
					</authorization>
				</upt-application>
				]]>
			</insert>
			</xmltask>
		</sequential>
	</macrodef>

	<macrodef name="install-upt-database">
		<attribute name="database.driver" default="NOT SET" />
		<attribute name="database.system.url" default="NOT SET" />
		<attribute name="database.system.user" default="NOT SET" />
		<attribute name="database.system.password" default="NOT SET" />
		<attribute name="database.url" default="NOT SET" />
		<attribute name="database.user" default="NOT SET" />
		<attribute name="database.password" default="NOT SET" />
		<attribute name="database.version" default="NOT SET" />
		<attribute name="database.name" default="NOT SET" />
		<attribute name="database.type" default="NOT SET"/>
		<attribute name="database.dir.src" default="NOT SET"/>
		<attribute name="database.server" default="NOT SET"/>
		
		<attribute name="database.schema" default="NOT SET"/>
		<attribute name="database.re-create" default="NOT SET"/>
		<attribute name="database.drop-schema" default="NOT SET"/>
		
		<attribute name="db.install.dir" default="NOT SET"/>
		<attribute name="db.install.create.oracle.file.list" default="NOT SET"/>
		<attribute name="db.install.create.mysql.file.list" default="NOT SET"/>
		<attribute name="db.install.create.postgresql.file.list" default="NOT SET"/>
		<attribute name="db.upgrade.non-central.file" default="NOT SET"/>
	
		<sequential>
			<switch value="${database.type}">
				<case value="oracle">
					<property name="database.driver.file" value="${build-utils.dir}/ojdbc14-10.2.0.3.0.jar"/>
				<property name="database.driver" value="oracle.jdbc.driver.OracleDriver"/>
				</case>
				<case value="mysql">
					<property name="database.driver.file" value="${build-utils.dir}/mysql-connector-java-5.1.32-bin.jar"/>
					<property name="database.driver" value="com.mysql.jdbc.Driver"/>
				</case>
				<case value="postgresql">
					<property name="database.driver.file" value="${build-utils.dir}/postgresql-8.4-701.jdbc3.jar"/>
					<property name="database.driver" value="org.postgresql.Driver"/>
				</case>
				<default>
					<fail message="Invalid database type ${database.type}"/>
				</default>
			</switch>
			<antcall target="install:database:prep" inheritall="true">
				<param name="database.url" value="@{database.url}"/>
				<param name="database.user" value="@{database.user}"/>
				<param name="database.password" value="@{database.password}"/>
				<param name="database.name" value="@{database.name}"/>
				<param name="database.type" value="@{database.type}"/>
				<param name="db.dir.dest" value="${basedir}/working/@{database.dir.src}"/>
				<param name="db.dir.src" value="${basedir}/@{database.dir.src}"/>				
			</antcall>
			<validate-pre-install-database 
				database.driver="@{database.driver}" database.system.url="@{database.system.url}" 
				database.system.user="@{database.system.user}" database.system.password="@{database.system.password}" 
				database.url="@{database.url}" database.user="@{database.user}" 
				database.password="@{database.password}" database.version="@{database.version}" 
				database.name="@{database.name}" database.type="@{database.type}" />
			<database-clean	 
				database.driver="@{database.driver}" database.system.url="@{database.system.url}" 
				database.system.user="@{database.system.user}" database.system.password="@{database.system.password}" 
				database.url="@{database.url}" database.user="@{database.user}" 
				database.password="@{database.password}" database.version="@{database.version}" 
				database.name="@{database.name}" database.schema="@{database.schema}" 
				database.re-create="@{database.re-create}" 
				database.server="@{database.server}"
				database.drop-schema="@{database.drop-schema}" 
				/>
			
			<switch value="${database.type}">
				<case value="oracle">
				   <database-install		
						db.install.create.file.list="@{db.install.create.oracle.file.list}"
						db-install.dir="@{db.install.dir}"
						sql.delimiter="/" sql.delimitertype="row"
						database.url="@{database.url}"
						database.user="@{database.user}"
						database.password="@{database.password}"						
					/>
				</case>
				<case value="postgresql">
					<database-install
						db.install.create.file.list="@{db.install.create.postgresql.file.list}"
						db-install.dir="@{db.install.dir}" 
						sql.delimiter="/" sql.delimitertype="row"
						database.url="@{database.url}"
						database.user="@{database.user}"
						database.password="@{database.password}"							
					/>
				</case>
				<case value="mysql">
					<database-install
						db.install.create.file.list="@{db.install.create.mysql.file.list}"
						db-install.dir="@{db.install.dir}"
						database.url="@{database.url}"
						database.user="@{database.user}"
						database.password="@{database.password}"
					 />
				</case>
			</switch>
			
		  </sequential>
	</macrodef>
	
	<target name="re-configure-ear">
		<property name="temp.ear.dir" value="tempEAR"/>
		<available file="${upt.dist.relative.dir}/${dist.relative.ear.dir}/${upt.ear.file}.ear.org" property="upt.ear.org.present"/>
		<if>
			<equals arg1="${upt.ear.org.present}" arg2="true"/>
			<then>
				<copy file="${upt.dist.relative.dir}/${dist.relative.ear.dir}/${upt.ear.file}.ear.org" tofile="${upt.dist.relative.dir}/${dist.relative.ear.dir}/${upt.ear.file}.ear" overwrite="true"/>
			</then>
			<else>
				<copy file="${upt.dist.relative.dir}/${dist.relative.ear.dir}/${upt.ear.file}.ear" tofile="${upt.dist.relative.dir}/${dist.relative.ear.dir}/${upt.ear.file}.ear.org"/>
			</else>
		</if>
		<unzip dest="${temp.ear.dir}" src="${upt.dist.relative.dir}/${dist.relative.ear.dir}/${upt.ear.file}.ear"/>

		<property name="upt.jndi.name.value" value="/${upt.central.jndi.name}"/>
		<property name="upt.database.dialect" value="${upt.central.database.dialect}"/>
		
		<!-- unzip uptlogin.war and replace dialect, jndi, repackage war and delete temp dirs -->

		<filterset id="upt.database.dialect.filterset">
			<filter token="database.dialect" value="${upt.database.dialect}" />
		</filterset>
		<filterset id="upt.database.jndi.filterset">
			<filter token="datasource.jndi.name" value="${upt.jndi.name.value}" />
		</filterset>

		<unzip dest="${temp.ear.dir}/tempupt" src="${temp.ear.dir}/${upt.central.url.context.name}.war"/>
		<mkdir dir="${temp.ear.dir}/upt"/>
		<copy todir="${temp.ear.dir}/upt" overwrite="true">
				<fileset dir="${temp.ear.dir}/tempupt"/>
		</copy>
		<copy todir="${temp.ear.dir}/upt" overwrite="true">
				<fileset dir="${temp.ear.dir}/tempupt">
							<include name="**/*.csm.new.hibernate.cfg.xml" />
						</fileset>
				<filterset refid="upt.database.dialect.filterset"/>
				<filterset refid="upt.database.jndi.filterset"/>
		</copy>
		<if>
		<equals arg1="${SERVER_TYPE}" arg2="jboss" casesensitive="false"/>
		<then>
			<delete file="${temp.ear.dir}/upt/WEB-INF/lib/log4j-1.2.16.jar"/>
		</then>
		</if>
		<!--<copy todir="${jboss.home}/standalone/lib" file="${temp.ear.dir}/upt/WEB-INF/lib/clm-4.1.1.jar"/>-->
		<copy todir="${jboss.home}/csmconfig/" overwrite="true">
			<fileset dir="${temp.ear.dir}/upt/WEB-INF/classes">
				<include name="csmupt.csm.new.hibernate.cfg.xml" />
			</fileset>
		</copy>
		<jar jarfile="${temp.ear.dir}/${upt.central.url.context.name}.war" basedir="${temp.ear.dir}/upt" />
		<delete dir="${temp.ear.dir}/tempupt" quiet="true"/>
		<delete dir="${temp.ear.dir}/upt" quiet="true"/>

		<!-- Create ear file and place in ear directory -->
		<jar jarfile="${jboss.home}/standalone/deployments/${upt.ear.file}.dodeploy.ear" basedir="${temp.ear.dir}" />
		<!--<delete dir="${temp.ear.dir}" quiet="true"/>-->
		
	</target>
	
	<macrodef name="re-configure-application-xml">
		<attribute name="upt.context.name" default="NOT SET" />
		<attribute name="temp.dir" default="NOT SET" />
		<sequential>
			<xmltask preservetype="true" failWithoutMatch="true"
							source="@{temp.dir}/META-INF/application.xml"
							dest="@{temp.dir}/META-INF/application.xml">
				<remove path="/application/module[@id='@{upt.context.name}']" />
			</xmltask>
		</sequential>
	</macrodef>

	<target name="common:init" depends="common:init:pre">
		<property name="install.running" value="true"/>
		<!-- upt-ear can use either Oracle or MySQL or PostgreSQL as its database platform, this is controled by the database.type property.  Based on the value of this property sent several variables for use during install -->
		<echoproperties prefix="database"/>
		<property name="properties.template.file" value="${basedir}/properties.template" />
		<!--OS Temp dir -->
		<condition property="os.temp.dir" value="/tmp">
			<or>
				<os family="unix" />
				<os family="mac" />
			</or>
		</condition>
		<condition property="os.temp.dir" value="c:/temp">
			<os family="windows" />
		</condition>
	</target>


	<target name="deploy:ear" description="Configures UPT application, JBOSS CLI, creates database, and deploys application"
		depends="
		common:init,
		install:common:validation:pre-install,
		install:common:clean,
		install:jboss:configure:upt-ear,
		install:jboss:configure:application:context
		">
	</target>

	<target name="configure:eap" description="Configures UPT application, JBOSS CLI, creates database, and deploys application"
		depends="
		common:init,
		install:configure:eap,
		install:jboss:configure:login:config
		">
	</target>
	
	<target name="install:upt:database" description="Set up UPT database with default data"
		depends="
		common:init,
		install:common:validation:pre-install,
		install:common:clean,
		install:upt:databases
		">
	</target>

	<target name="upgrade:upt:database" description="Set up UPT database with default data"
		depends="
		common:init,
		install:common:validation:pre-install,
		install:common:clean,
		upgrade:upt:databases
		">
	</target>
	
	<target name="upgrade:common:init" depends="upgrade:jboss:init" unless="install.running">
	</target>
	
	<!-- Upgrade with No Container Modification (NCM) -->
	<!--
	<target name="upgrade-ncm:jboss" description="Wrapper target to call all targets required to upgrade jboss container." unless="exclude.jboss"
		depends="
		upgrade:jboss:init,
		common:init,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:validation:pre-install:ports,
		install:jboss:configure:upt-ear,
		install:jboss:configure:login:config,
		install:jboss:configure:application:context,
		upgrade:upt:databases,
		install:post:jboss,
		install:jboss:start,
		install:jboss:validation:post-install
		">
	</target>
	-->
	
	<target name="upgrade:upt:databases" description="Upgrades database using build Datbase Upgrade process." unless="exclude.database">
		<echo message="execute for non central database"/>		
		<mkdir dir="${os.temp.dir}/${project.name}"/>

		<switch value="${upt.central.database.type}">
			<case value="oracle">
				<property name="database.upgrade.type" value="Oracle"/>
				<copy todir="${os.temp.dir}/${project.name}" filtering="true" flatten="true" overwrite="true">
					<fileset dir="${db-install.dist.relative.dir}/db-upgrade/oracle">
						<include name="db-upgrade*.xml"/>
						<include name="MigrationScript*.xml"/>
					</fileset>
					<filterset>
						<filter token="os.temp.dir" value="${os.temp.dir}" />
						<filter token="project.name" value="${project.name}" />
					</filterset>
				</copy>
			</case>
			<case value="mysql">
				<property name="database.upgrade.type" value="MySQL"/>
				<copy todir="${os.temp.dir}/${project.name}" filtering="true" flatten="true" overwrite="true">
					<fileset dir="${db-install.dist.relative.dir}/db-upgrade/mysql">
						<include name="db-upgrade*.xml"/>
						<include name="MigrationScript*.xml"/>
					</fileset>
					<filterset>
						<filter token="os.temp.dir" value="${os.temp.dir}" />
						<filter token="project.name" value="${project.name}" />
					</filterset>
				</copy>
			</case>
			<case value="postgresql">
				<property name="database.upgrade.type" value="PostgreSQL"/>
				<copy todir="${os.temp.dir}/${project.name}" filtering="true" flatten="true" overwrite="true">
					<fileset dir="${db-install.dist.relative.dir}/db-upgrade/postgresql">
						<include name="db-upgrade*.xml"/>
						<include name="MigrationScript*.xml"/>
					</fileset>
					<filterset>
						<filter token="os.temp.dir" value="${os.temp.dir}" />
						<filter token="project.name" value="${project.name}" />
					</filterset>
				</copy>
			</case>
			<default>
				<fail message="Invalid database type ${database.type}"/>
			</default>
		</switch>


		<upgrade-upt-database
			database.system.url="${upt.central.database.system.url}" database.name="${upt.central.database.name}" 
			schema.name="${upt.central.database.schema.name}"
			database.system.password="${upt.central.database.system.password}"  
			database.system.user="${upt.central.database.system.user}"
			database.url="${upt.central.database.url}" 
			database.user="${upt.central.database.user}" 
			database.password="${upt.central.database.password}" 
			database.type="${upt.central.database.type}" 
			database.upgrade.schema.file="MigrationScript${upgrade.upt.central.db.previous.version}${database.upgrade.type}.xml" />
	</target>
	
	<macrodef name="upgrade-upt-database">
		<attribute name="database.system.url" default="NOT SET" />
		<attribute name="database.system.user" default="NOT SET" />
		<attribute name="database.system.password" default="NOT SET" />
		<attribute name="database.url" default="NOT SET" />
		<attribute name="database.user" default="NOT SET" />
		<attribute name="database.password" default="NOT SET" />
		<attribute name="database.name" default="NOT SET" />
		<attribute name="schema.name" default="NOT SET" />
		<attribute name="database.type" default="NOT SET"/>
		<attribute name="database.upgrade.schema.file" default="NOT SET"/>
		
		<sequential>
			<switch value="@{database.type}">
				<case value="oracle">
					<property name="database.driver.file" value="${build-utils.dir}/ojdbc14-10.2.0.3.0.jar"/>
					<property name="database.upgrade.driver" value="oracle.jdbc.driver.OracleDriver"/>
				</case>
				<case value="mysql">
					<property name="database.driver.file" value="${build-utils.dir}/mysql-connector-java-5.1.32-bin.jar"/>
					<property name="database.upgrade.driver" value="com.mysql.jdbc.Driver"/>
				</case>
				<case value="postgresql">
					<property name="database.driver.file" value="${build-utils.dir}/postgresql-8.4-701.jdbc3.jar"/>
					<property name="database.upgrade.driver" value="org.postgresql.Driver"/>
				</case>
				<default>
					<fail message="Invalid database type ${database.type}"/>
				</default>
			</switch>
			<echo message="database.driver=${database.upgrade.driver}"/>
            <echo message="database.system.url=@{database.system.url} "/>
            <echo message="database.system.user=@{database.system.user}"/>
            <echo message="database.system.password=@{database.system.password} "/>
            <echo message="database.url=@{database.url}"/>
            <echo message="database.user=@{database.user} "/>
            <echo message="database.password=@{database.password}"/>
            <echo message="database.name=@{database.name}"/>
            <echo message="schema.name=@{schema.name}"/>
            <echo message="database.type=@{database.type}"/>
			<validate-pre-install-database
						database.driver="${database.upgrade.driver}" database.system.url="@{database.system.url}" 
						database.system.user="@{database.system.user}" database.system.password="@{database.system.password}" 
						database.url="@{database.url}" database.user="@{database.user}" 
						database.password="@{database.password}"
						database.name="@{database.name}" database.type="@{database.type}"
			/>
			<switch value="@{database.type}">
				<case value="oracle">
					<database-upgrade database.driver="${database.upgrade.driver}" database.url="@{database.url}" 
									  database.user="@{database.user}" database.password="@{database.password}" 
									  database.schema="@{database.user}"
									  database.changelog.file="${os.temp.dir}/${project.name}/@{database.upgrade.schema.file}"/>
				</case>
				<case value="mysql">
					<database-upgrade database.driver="${database.upgrade.driver}" database.url="@{database.url}" 
									  database.user="@{database.user}" database.password="@{database.password}" 
									  database.schema="@{database.name}"
									  database.changelog.file="${os.temp.dir}/${project.name}/@{database.upgrade.schema.file}"/>
				</case>
				<case value="postgresql">
					<database-upgrade database.driver="${database.upgrade.driver}" database.url="@{database.url}" 
									  database.user="@{database.user}" database.password="@{database.password}" 
									  database.schema="@{schema.name}"
									  database.changelog.file="${os.temp.dir}/${project.name}/@{database.upgrade.schema.file}"/>
				</case>
				<default>
					<fail message="Invalid database type ${database.type}"/>
				</default>
			</switch>

			<database-tag database.driver="${database.upgrade.driver}" database.url="@{database.url}"
						  database.user="@{database.user}" database.password="@{database.password}" 
						  database.schema="@{schema.name}" />
	   </sequential>
	</macrodef>


	<target name="migration:set-classpath" description="">
		<unzip dest="./tempEAR/${upt.central.url.context.name}" src="./tempEAR/${upt.central.url.context.name}.war"/>
	</target>

	<target name="migration:run" description="">
		<path id="project.classpath">
			<fileset dir="${build-utils.dir}">
				<include name="**/*.jar" />
			</fileset>			
		</path>

		<input message="To Protect PII in CSM tables, CSM 5.0 has started encrypting PII with AES encryption. Existing data in CSM_USER table will be migrated to new encryption.  Do you want to proceed?"
			validargs="y,n"
			addproperty="accept.application.dir.update" />
		<if>
			<equals arg1="${accept.application.dir.update}" arg2="n"/>
			<then>
				<fail message="User tereminated the migration."/>
			</then>
		</if>
		
	       <java classname="gov.nih.nci.migration.MigrationDriver"	       		
			classpathref="project.classpath">
			<arg value="${properties.file}"/>
			<!-- <arg value="${upt.central.database.type}"/>
			<arg value="${upt.central.database.user}"/>
			<arg value="${upt.central.database.password}"/>
			
			<arg value="${upt.central.database.server}"/>
			<arg value="${upt.central.database.port}"/>
			<arg value="${upt.central.database.name}"/> -->
		</java>
	</target>	 
</project>
