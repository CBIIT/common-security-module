<?xml version="1.0" encoding="utf-8" ?>
<!-- bda-build-template version 1.0.1 -->
<!--
$Id: install.xml 1593 2009-04-27 21:29:25Z saksass $
$HeadURL: https://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-build-template/software/build/install.xml $
-->

<project name="backwards-compatible-upt" default="install:jboss:backwards-compatible-upt" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<import file="bda-master-install.xml" />

	<!-- Generic properties -->
	<property name="project.name" value="csm-backwards-compatible-upt" />

	<!-- *-ds.xml and WAR -->
	<property name="backwards.compatible.upt.dist" value="${basedir}/${backwards.compatible.upt.dist.relative.dir}" />
	<property name="backwards-compatible-upt.ds.file" value="mysql-ds.xml" />
	<property name="upt.app-sec-conf.file" value="ApplicationSecurityConfig.xml" />
	<property name="upt.hibernate.file" value="hibernate.cfg.xml" />
	<property name="backwards-compatible.upt.ear.file" value="uptEAR.ear" />
	<property name="securityws.dir.dist" value="${basedir}/${securityws.dist.relative.dir}" />
	<property name="securityws.war.file" value="securityws.war" />
	<property name="clm.jar.file" value="clm-4.1.jar" />

	<!-- Wrapper target to deploy JBOSS container -->
	<target name="install:jboss:backwards-compatible-upt" description="Wrapper scripts that calls all required targets to install the jboss container" unless="exclude.jboss" depends="
		common:jboss:init,
		common:init,
		install:jboss:init,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:validation:pre-install:ports,
		install:jboss:clean,
		install:jboss:binaries,
		install:jboss:backwards-compatible-upt-ear:re-configure,
		install:jboss:backwards-compatible-upt-ear,
		install:jboss:backwards-compatible-upt-ear:configure,
		install:jboss:configure:login:config,
		install:jboss:configure:application:context,
		install:backwards-compatible-upt:databases,		
		install:jboss:configure:datasources,
		install:post:jboss,
		install:jboss:start,
		install:jboss:validation:post-install
		">
	</target>	
	
	<target name="upgrade:jboss:backwards-compatible-upt" description="Upgrades JBoss and Database" depends="		
		common:init,
		common:jboss:init,
		install:common:validation:pre-install,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:backwards-compatible-upt-ear,
		install:jboss:backwards-compatible-upt-ear:configure,
		install:jboss:configure:login:config,
		install:jboss:configure:application:context,
		install:jboss:configure:datasources,
		install:post:jboss,
		install:jboss:start,
		install:common:validation:post-install">
	</target>

	
	<target name="install:jboss:backwards-compatible-upt-ear" description="Deploy bda-blueprints-webapp and common libraries to jboss installation" unless="exclude.jboss" depends="common:init">
		<!-- added to ensure working.dirs are fresh for our install -->
		<delete dir="${jboss.home}/server/${jboss.server.name}/tmp" />
		<delete dir="${jboss.home}/server/${jboss.server.name}/work" />
		<move file="${jboss.home}/server/${jboss.server.name}/log/server.log" tofile="${jboss.home}/server/${jboss.server.name}/log/server/log.${install.time}" failonerror="false" />

		<copy file="${backwards.compatible.upt.dist}/uptEAR/${backwards-compatible.upt.ear.file}" todir="${jboss.home}/server/${jboss.server.name}/deploy" overwrite="true" />
		<copy file="${database.driver.file}" todir="${jboss.home}/server/${jboss.server.name}/lib" overwrite="true" />
	</target>

	<target name="install:jboss:backwards-compatible-upt-ear:configure" depends="common:init">
		<available file="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml" property="application.security.config.file.present"/>
		<if>
			<equals arg1="${application.security.config.file.present}" arg2="true"/>
			<then>	
				<move file="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml" tofile="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml.orginal" overwrite="true"/>
			</then>
		</if>

		<copy todir="${jboss.home}/server/${jboss.server.name}/csmconfig" overwrite="true">
			<fileset dir="${basedir}">
				<include name="*ApplicationSecurityConfig.xml" />
				<include name="*csmupt31.hibernate.cfg.xml" />
			</fileset>
			<filterset>
				<filterset refid="embedded.filterset"/>
				<filterset>
					<filtersfile file="${properties.file}"/>
					<filtersfile file="project.properties"/>
				</filterset>
			</filterset>
		</copy>
		
		<available file="${jboss.home}/server/${jboss.server.name}/deploy/backwards_compatible_upt-ds.xml" property="application.backwards-compatible-upt.ds.file.present"/>
		<if>
			<equals arg1="${application.backwards-compatible-upt.ds.file.present}" arg2="true"/>
			<then>	
				<move file="${jboss.home}/server/${jboss.server.name}/deploy/backwards_compatible_upt-ds.xml" tofile="${jboss.home}/server/${jboss.server.name}/deploy/backwards_compatible_upt-ds.xml.orginal" overwrite="true"/>
			</then>
		</if>
		<copy file="${basedir}/backwards_compatible_upt-ds-template.xml" tofile="${jboss.home}/server/${jboss.server.name}/deploy/backwards_compatible_upt-ds.xml" overwrite="true"/>

		<!-- This code is for updating properties.service.xml, make sure to add ${line.separator} after each property def as the property delimiter, if this is not included you will not get the desired results. If you do not use properties service.xml you can delete this code. -->
		<var name="property.block" value="gov.nih.nci.security.configFile=${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml${line.separator}
				" />
		<copy file="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml" tofile="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml.orig" overwrite="true" />
		<jboss-update-properties-service property.block="${property.block}" />
	</target>

	<target name="install:jboss:backwards-compatible-upt-ear:re-configure" description="Update contents of artifacts if not all properties have been externalized, by extracting artifact, modify it as needed and re-archive it." unless="exclude.jboss" depends="common:init">
		<!-- This is only required if configuration files are not externalized, below is a sample of what you may do.
		<delete dir="${working.dir}/bda-blueprints-webapp"/>
		<unzip src="${bda-blueprints-webapp.dir.dist}/${bda-blueprints-webapp.war.file}" dest="${working.dir}/bda-blueprints-webapp"/>
		<copy todir="${working.dir}/bda-blueprints-webapp/WEB-INF/classes" file="${jboss-conf.dir.dest}/hibernate.cfg.xml"/>
		
		<move file="${bda-blueprints-webapp.dir.dist}/${bda-blueprints-webapp.war.file}" tofile="${bda-blueprints-webapp.dir.dist}/${bda-blueprints-webapp.war.file}.orig"/>
		<war destfile="${bda-blueprints-webapp.dir.dist}/${bda-blueprints-webapp.war.file}" compress="false" webxml="${working.dir}/bda-blueprints-webapp/WEB-INF/web.xml" >
			<fileset dir="${working.dir}/bda-blueprints-webapp">
				<include name="*/**" />
			</fileset>
		</war>  
		-->
	</target>

	<target name="install:jboss:configure:login:config" description="Configure login config software/common/resource/jboss-conf/login-config.block.xml" unless="exclude.jboss" depends="common:jboss:init,common:init">
		<property name="login-config-template.xml" value="${basedir}/login-config-template.xml"/>
		<copy file="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml" tofile="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml.orginal" overwrite="true"/>
		<echo
			message="Inserting ${login-config-template.xml} into ${jboss.home}/server/${jboss.server.name}/conf/login-config.xml" />
		<xmltask preservetype="true"
			source="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml"
			dest="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml">
			<xmlcatalog refid="bda.xml.catalog" />
			<remove
				path="//policy/application-policy[@name='${application.context.name}']" />
		</xmltask>
		<xmltask preservetype="true" failWithoutMatch="true"
			source="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml"
			dest="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml">
			<xmlcatalog refid="bda.xml.catalog" />
			<insert path="//policy" file="${login-config-template.xml}" />
		</xmltask>
		<if>
			<not>
				<equals arg1="${upt.31.authentication.type}" arg2="NONE" />
			</not>
			<then>
				<configure-login-config 
				 		authentication.type="${upt.31.authentication.type}"
						database.driver="${upt.31.database.driver.class}" database.url="${upt.31.database.url}"
						database.user="${upt.31.database.user}" database.password="${upt.31.database.password}"
						database.encrypt.enabled="${upt.31.database.encrypt.enabled}" 
						ldaps.url="${upt.31.ldaps.url}" ldaps.basedn="${upt.31.ldaps.basedn}" ldaps.userid.label="${upt.31.ldaps.userid.label}"
						ldap.url="${upt.31.ldap.url}" ldap.searchable.base="${upt.31.ldap.searchable.base}"	ldap.userid.label="${upt.31.ldap.userid.label}"
						ldap.admin.user.name="${upt.31.ldap.admin.user.name}" ldap.admin.user.password="${upt.31.ldap.admin.user.password}"
				/>
			</then>
		</if>
		<if>
			<not>
				<equals arg1="${upt.32.authentication.type}" arg2="NONE" />
			</not>
			<then>
				<configure-login-config 
				 		authentication.type="${upt.32.authentication.type}"
						database.driver="${upt.32.database.driver.class}" database.url="${upt.32.database.url}"
						database.user="${upt.32.database.user}" database.password="${upt.32.database.password}"
						database.encrypt.enabled="${upt.32.database.encrypt.enabled}" 
						ldaps.url="${upt.32.ldaps.url}" ldaps.basedn="${upt.32.ldaps.basedn}" ldaps.userid.label="${upt.32.ldaps.userid.label}"
						ldap.url="${upt.32.ldap.url}" ldap.searchable.base="${upt.32.ldap.searchable.base}"	ldap.userid.label="${upt.32.ldap.userid.label}"
						ldap.admin.user.name="${upt.32.ldap.admin.user.name}" ldap.admin.user.password="${upt.32.ldap.admin.user.password}"
				/>
			</then>
		</if>
		<if>
			<not>
				<equals arg1="${upt.40.authentication.type}" arg2="NONE" />
			</not>
			<then>
				<configure-login-config authentication.type="${upt.40.authentication.type}"
					database.driver="${upt.40.database.driver.class}" database.url="${upt.40.database.url}"
					database.user="${upt.40.database.user}" database.password="${upt.40.database.password}"
					database.encrypt.enabled="${upt.40.database.encrypt.enabled}"
					ldaps.url="${upt.40.ldaps.url}" ldaps.basedn="${upt.40.ldaps.basedn}" ldaps.userid.label="${upt.40.ldaps.userid.label}"
					ldap.url="${upt.40.ldap.url}" ldap.searchable.base="${upt.40.ldap.searchable.base}"	ldap.userid.label="${upt.40.ldap.userid.label}"
					ldap.admin.user.name="${upt.40.ldap.admin.user.name}" ldap.admin.user.password="${upt.40.ldap.admin.user.password}"

				/>
			</then>
		</if>
		<if>
			<not>
				<equals arg1="${upt.41.authentication.type}" arg2="NONE" />
			</not>
			<then>
				<configure-login-config authentication.type="${upt.41.authentication.type}"
					database.driver="${upt.41.database.driver.class}" database.url="${upt.41.database.url}"
					database.user="${upt.41.database.user}" database.password="${upt.41.database.password}"
					database.encrypt.enabled="${upt.41.database.encrypt.enabled}"
					ldaps.url="${upt.41.ldaps.url}" ldaps.basedn="${upt.41.ldaps.basedn}" ldaps.userid.label="${upt.41.ldaps.userid.label}"
					ldap.url="${upt.41.ldap.url}" ldap.searchable.base="${upt.41.ldap.searchable.base}"	ldap.userid.label="${upt.41.ldap.userid.label}"
					ldap.admin.user.name="${upt.41.ldap.admin.user.name}" ldap.admin.user.password="${upt.41.ldap.admin.user.password}"
				/>
			</then>
		</if>
		<if>
			<not>
				<equals arg1="${upt.42.authentication.type}" arg2="NONE" />
			</not>
			<then>
				<configure-login-config authentication.type="${upt.42.authentication.type}"
					database.driver="${upt.42.database.driver.class}" database.url="${upt.42.database.url}"
					database.user="${upt.42.database.user}" database.password="${upt.42.database.password}"
					database.encrypt.enabled="${upt.42.database.encrypt.enabled}"
					ldaps.url="${upt.42.ldaps.url}" ldaps.basedn="${upt.42.ldaps.basedn}" ldaps.userid.label="${upt.42.ldaps.userid.label}"
					ldap.url="${upt.42.ldap.url}" ldap.searchable.base="${upt.42.ldap.searchable.base}"	ldap.userid.label="${upt.42.ldap.userid.label}"
					ldap.admin.user.name="${upt.42.ldap.admin.user.name}" ldap.admin.user.password="${upt.42.ldap.admin.user.password}"
				/>
			</then>
		</if>
	</target>

	<target name="install:jboss:configure:datasources" description="Configure login config /deploy/backwards_compatible_upt-ds.xml" unless="exclude.jboss" depends="common:jboss:init,common:init">
		<if>
			<equals arg1="${upt.central.config}" arg2="true" />
			<then>
				<configure-datasources 	database.url="${upt.central.database.url}" 
					database.user="${upt.central.database.user}" 
					database.password="${upt.central.database.password}" jndi.name="${upt.central.jndi.name}"
					driver.class="${upt.central.driver.class}"
				/>
			</then>
			<else>
				<if>
					<equals arg1="${upt.31.installed}" arg2="true" />
					<then>
						<configure-datasources 	database.url="${upt.31.database.url}"
							database.user="${upt.31.database.user}"
							database.password="${upt.31.database.password}" jndi.name="${upt.31.jndi.name}"
							driver.class="${upt.31.database.driver.class}"
						/>
					</then>
				</if>
				<if>
					<equals arg1="${upt.32.installed}" arg2="true" />
					<then>
						<configure-datasources 	database.url="${upt.32.database.url}" 
							database.user="${upt.32.database.user}"
							database.password="${upt.32.database.password}" jndi.name="${upt.32.jndi.name}"
							driver.class="${upt.32.database.driver.class}"
						/>
					</then>
				</if>
				<if>
					<equals arg1="${upt.40.installed}" arg2="true" />
					<then>
						<configure-datasources 	database.url="${upt.40.database.url}"
							database.user="${upt.40.database.user}"
							database.password="${upt.40.database.password}" jndi.name="${upt.40.jndi.name}"
							driver.class="${upt.40.database.driver.class}"
						/>
					</then>
				</if>
				<if>
					<equals arg1="${upt.41.installed}" arg2="true" />
					<then>
						<configure-datasources 	database.url="${upt.41.database.url}"
							database.user="${upt.41.database.user}"
							database.password="${upt.41.database.password}" jndi.name="${upt.41.jndi.name}"
							driver.class="${upt.41.database.driver.class}"
						/>
					</then>
				</if>
				<if>
					<equals arg1="${upt.42.installed}" arg2="true" />
					<then>
						<configure-datasources database.url="${upt.42.database.url}"
							database.user="${upt.42.database.user}"
							database.password="${upt.42.database.password}" jndi.name="${upt.42.jndi.name}"
							driver.class="${upt.42.database.driver.class}"
						/>
					</then>
				</if>
			</else>
		</if>
	</target>

	<target name="install:jboss:configure:application:context"
			description="Configure application context config ${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml"
			unless="exclude.jboss" depends="common:jboss:init,common:init">

		<xmltask preservetype="true"
					source="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml"
					dest="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml">
			<xmlcatalog refid="bda.xml.catalog" />
			<remove
					path="//security-config/backwards-compatibility/upt-application-list/text()" />
		</xmltask>

		<xmltask preservetype="true" failWithoutMatch="true" source="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml" dest="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml">
			<xmlcatalog refid="bda.xml.catalog" />
			<insert path="/security-config/application-list" position="under">
				<![CDATA[
					<application>
				<context-name>${upt.31.context.name}</context-name>
				<authentication>
					<authentication-provider-class/>
					<lockout-time>6000</lockout-time>
					<allowed-login-time>6000</allowed-login-time>
					<allowed-attempts>3</allowed-attempts>
				</authentication>
				<authorization>
					<authorization-provider-class>
					</authorization-provider-class>
					<hibernate-config-file>${jboss.home}/server/${jboss.server.name}/conf/csmconfig/${upt.31.hibernate.config.file}</hibernate-config-file>
				</authorization>
			</application>
				]]>
		     </insert>
	</xmltask>
	<if>
		<equals arg1="${upt.31.installed}" arg2="true" />
		<then>
			<configure-application-context
							context.name="${upt.31.context.name}" url.context.name="${upt.31.url.context.name}"
							hibernate.config.file="${upt.31.hibernate.config.file}" />
		</then>
	</if>
	<if>
		<equals arg1="${upt.32.installed}" arg2="true" />
		<then>
			<configure-application-context
							context.name="${upt.32.context.name}" url.context.name="${upt.32.url.context.name}"
							hibernate.config.file="${upt.32.hibernate.config.file}" />
		</then>
	</if>
	<if>
		<equals arg1="${upt.40.installed}" arg2="true" />
		<then>
			<configure-application-context
							context.name="${upt.40.context.name}" url.context.name="${upt.40.url.context.name}"
							hibernate.config.file="${upt.40.hibernate.config.file}" />
		</then>
	</if>
	<if>
		<equals arg1="${upt.41.installed}" arg2="true" />
		<then>
			<configure-application-context
							context.name="${upt.41.context.name}" url.context.name="${upt.41.url.context.name}"
							hibernate.config.file="${upt.41.hibernate.config.file}" />
		</then>
	</if>
	<if>
		<equals arg1="${upt.42.installed}" arg2="true" />
		<then>
			<configure-application-context
							context.name="${upt.42.context.name}" url.context.name="${upt.42.url.context.name}"
							hibernate.config.file="${upt.42.hibernate.config.file}" />
		</then>
	</if>
	</target>

	<target name="install:backwads-compatible-upt:database:validation:pre-install">
		<property name="database.type" value="${database.type}"/>
		<property name="database.port" value="${database.port}"/>
		<property name="database.server" value="${database.server}"/>
		<property name="database.re-create" value="${database.re-create}"/>
		
		<validate-pre-install-database 
				database.driver="${database.driver}" database.system.url="${database.system.url}" 
				database.system.user="${database.system.user}" database.system.password="${database.system.password}" 
				database.url="${database.url}" database.user="${database.user}" 
				database.password="${database.password}" 
				database.name="${database.name}" database.type="${database.type}"
			/>
	</target>
	<!-- common:init -->
	<target name="install:backwards-compatible-upt:database:validation:pre-install" description="Runs pre-install validation checks bda-utils" 
			depends="
			install:common:validation:pre-install
			">
		<if>
			<equals arg1="${upt.central.config}" arg2="true" />
			<then>
				<antcall target="install:backwads-compatible-upt:database:validation:pre-install" inheritall="true">
					<param name="database.driver" value="${upt.central.database.driver.class}"/>
					<param name="database.system.url" value="${upt.central.database.url}"/>
					<param name="database.system.user" value="${upt.central.database.system.user}"/>
					<param name="database.system.password" value="${upt.central.database.system.password}"/>
					<param name="database.url" value="${upt.central.database.url}"/>
					<param name="database.user" value="${upt.central.database.user}"/>
					<param name="database.password" value="${upt.central.database.password}"/>
					<param name="database.name" value="${upt.central.database.name}"/>
					<param name="database.type" value="${upt.central.database.type}"/>
					
					<param name="database.re-create" value="${upt.central.database.re-create}"/>
					<param name="database.port" value="${upt.central.database.port}"/>
					<param name="database.server" value="${upt.central.database.server}"/>
				</antcall>
			</then>
			<else>
				<if>
					<equals arg1="${upt.31.installed}" arg2="true" />
					<then>
						<antcall target="install:backwads-compatible-upt:database:validation:pre-install" inheritall="true">
							<param name="database.driver" value="${upt.31.database.driver.class}"/>
							<param name="database.system.url" value="${upt.31.database.url}"/>
							<param name="database.system.user" value="${upt.31.database.system.user}"/>
							<param name="database.system.password" value="${upt.31.database.system.password}"/>
							<param name="database.url" value="${upt.31.database.url}"/>
							<param name="database.user" value="${upt.31.database.user}"/>
							<param name="database.password" value="${upt.31.database.password}"/>
							<param name="database.name" value="${upt.31.database.name}"/>
							<param name="database.type" value="${upt.31.database.type}"/>
							
							<param name="database.re-create" value="${upt.31.database.re-create}"/>
							<param name="database.port" value="${upt.31.database.port}"/>
							<param name="database.server" value="${upt.31.database.server}"/>
						</antcall>
					</then>
				</if>
				<if>
					<equals arg1="${upt.32.installed}" arg2="true" />
					<then>
						<antcall target="install:backwads-compatible-upt:database:validation:pre-install" inheritall="true">
							<param name="database.driver" value="${upt.32.database.driver.class}"/>
							<param name="database.system.url" value="${upt.32.database.url}"/>
							<param name="database.system.user" value="${upt.32.database.system.user}"/>
							<param name="database.system.password" value="${upt.32.database.system.password}"/>
							<param name="database.url" value="${upt.32.database.url}"/>
							<param name="database.user" value="${upt.32.database.user}"/>
							<param name="database.password" value="${upt.32.database.password}"/>
							<param name="database.name" value="${upt.32.database.name}"/>
							<param name="database.type" value="${upt.32.database.type}"/>
			
							<param name="database.re-create" value="${upt.32.database.re-create}"/>
							<param name="database.port" value="${upt.32.database.port}"/>
							<param name="database.server" value="${upt.32.database.server}"/>
						</antcall>
					</then>
				</if>
				<if>
					<equals arg1="${upt.40.installed}" arg2="true" />
					<then>
						<antcall target="install:backwads-compatible-upt:database:validation:pre-install" inheritall="true">
							<param name="database.driver" value="${upt.40.database.driver.class}"/>
							<param name="database.system.url" value="${upt.40.database.url}"/>
							<param name="database.system.user" value="${upt.40.database.system.user}"/>
							<param name="database.system.password" value="${upt.40.database.system.password}"/>
							<param name="database.url" value="${upt.40.database.url}"/>
							<param name="database.user" value="${upt.40.database.user}"/>
							<param name="database.password" value="${upt.40.database.password}"/>
							<param name="database.name" value="${upt.40.database.name}"/>
							<param name="database.type" value="${upt.40.database.type}"/>
			
							<param name="database.re-create" value="${upt.40.database.re-create}"/>
							<param name="database.port" value="${upt.40.database.port}"/>
							<param name="database.server" value="${upt.40.database.server}"/>
						</antcall>
					</then>
				</if>
				<if>
					<equals arg1="${upt.41.installed}" arg2="true" />
					<then>
						<antcall target="install:backwads-compatible-upt:database:validation:pre-install" inheritall="true">
							<param name="database.driver" value="${upt.41.database.driver.class}"/>
							<param name="database.system.url" value="${upt.41.database.url}"/>
							<param name="database.system.user" value="${upt.41.database.system.user}"/>
							<param name="database.system.password" value="${upt.41.database.system.password}"/>
							<param name="database.url" value="${upt.41.database.url}"/>
							<param name="database.user" value="${upt.41.database.user}"/>
							<param name="database.password" value="${upt.41.database.password}"/>
							<param name="database.name" value="${upt.41.database.name}"/>
							<param name="database.type" value="${upt.41.database.type}"/>
			
							<param name="database.re-create" value="${upt.41.database.re-create}"/>
							<param name="database.port" value="${upt.41.database.port}"/>
							<param name="database.server" value="${upt.41.database.server}"/>
						</antcall>
					</then>
				</if>
				<if>
					<equals arg1="${upt.42.installed}" arg2="true" />
					<then>
						<antcall target="install:backwads-compatible-upt:database:validation:pre-install" inheritall="true">
							<param name="database.driver" value="${upt.42.database.driver.class}"/>
							<param name="database.system.url" value="${upt.42.database.url}"/>
							<param name="database.system.user" value="${upt.42.database.system.user}"/>
							<param name="database.system.password" value="${upt.42.database.system.password}"/>
							<param name="database.url" value="${upt.42.database.url}"/>
							<param name="database.user" value="${upt.42.database.user}"/>
							<param name="database.password" value="${upt.42.database.password}"/>
							<param name="database.name" value="${upt.42.database.name}"/>
							<param name="database.type" value="${upt.42.database.type}"/>
			
							<param name="database.re-create" value="${upt.42.database.re-create}"/>
							<param name="database.port" value="${upt.42.database.port}"/>
							<param name="database.server" value="${upt.42.database.server}"/>
						</antcall>
					</then>
				</if>
			</else>
		</if>
	</target>
	
	<target name="install:backwards-compatible-upt:databases" description="Runs datbase creation scripts then calls uprade database." unless="exclude.database">
		<if>
			<equals arg1="${upt.31.database.re-create}" arg2="true" />
			<then>
				<install-backwards-compatible-upt-database 	
						database.driver="${upt.31.database.driver.class}" database.system.url="${upt.31.database.url}" 
						database.system.user="${upt.31.database.system.user}" database.system.password="${upt.31.database.system.password}" 
						database.url="${upt.31.database.url}" database.user="${upt.31.database.user}" 
						database.password="${upt.31.database.password}" database.version="${upt.31.database.version}" 
						database.name="${upt.31.database.name}" database.type="${upt.31.database.type}"
						database.schema="${upt.31.database.schema}"  database.re-create="${upt.31.database.re-create}"
						database.drop-schema="${upt.31.database.drop-schema}"
						db.install.dir="${working.dir}/${db-install.dist.relative.dir}/db-install/${backwards.compatible.upt.dist.relative.dir}/upt31"
						db.install.create.oracle.file.list="${upt.31.db.install.create.oracle.file.list}"
						db.install.create.mysql.file.list="${upt.31.db.install.create.mysql.file.list}"
						db.install.create.postgresql.file.list="${upt.31.db.install.create.postgres.file.list}"
					/>
			</then>
		</if>
		<if>
			<equals arg1="${upt.32.database.re-create}" arg2="true" />
			<then>
				<install-backwards-compatible-upt-database 	
						database.driver="${upt.32.database.driver.class}" database.system.url="${upt.32.database.url}" 
						database.system.user="${upt.32.database.system.user}" database.system.password="${upt.32.database.system.password}" 
						database.url="${upt.32.database.url}" database.user="${upt.32.database.user}" 
						database.password="${upt.32.database.password}" database.version="${upt.32.database.version}" 
						database.name="${upt.32.database.name}" database.type="${upt.32.database.type}"
						database.schema="${upt.32.database.schema}" database.re-create="${upt.32.database.re-create}"
						database.drop-schema="${upt.32.database.drop-schema}"
						db.install.dir="${working.dir}/${db-install.dist.relative.dir}/db-install/${backwards.compatible.upt.dist.relative.dir}/upt32"
						db.install.create.oracle.file.list="${upt.31.db.install.create.oracle.file.list}"
						db.install.create.mysql.file.list="${upt.31.db.install.create.mysql.file.list}"
						db.install.create.postgresql.file.list="${upt.31.db.install.create.postgres.file.list}"
					/>
			</then>
		</if>
		<if>
			<equals arg1="${upt.40.database.re-create}" arg2="true" />
			<then>
				<install-backwards-compatible-upt-database 	
						database.driver="${upt.40.database.driver.class}" database.system.url="${upt.40.database.url}" 
						database.system.user="${upt.40.database.system.user}" database.system.password="${upt.40.database.system.password}" 
						database.url="${upt.40.database.url}" database.user="${upt.40.database.user}" 
						database.password="${upt.40.database.password}" database.version="${upt.40.database.version}" 
						database.name="${upt.40.database.name}" database.type="${upt.40.database.type}"
						database.schema="${upt.40.database.schema}" database.re-create="${upt40.database.re-create}"
						database.drop-schema="${upt.40.database.drop-schema}"
						db.install.dir="${working.dir}/${db-install.dist.relative.dir}/db-install/${backwards.compatible.upt.dist.relative.dir}/upt40"
						db.install.create.oracle.file.list="${upt.40.db.install.create.oracle.file.list}"
						db.install.create.mysql.file.list="${upt.40.db.install.create.mysql.file.list}"
						db.install.create.postgresql.file.list="${upt.40.db.install.create.postgres.file.list}"
					/>
			</then>
		</if>
		<if>
			<equals arg1="${upt41.database.re-create}" arg2="true" />
			<then>
				<install-backwards-compatible-upt-database 	
						database.driver="${upt.41.database.driver.class}" database.system.url="${upt.41.database.url}" 
						database.system.user="${upt.41.database.system.user}" database.system.password="${upt.41.database.system.password}" 
						database.url="${upt.41.database.url}" database.user="${upt.41.database.user}" 
						database.password="${upt.41.database.password}" database.version="${upt.41.database.version}" 
						database.name="${upt.41.database.name}" database.type="${upt.41.database.type}"
						database.schema="${upt.41.database.schema}"  database.re-create="${upt41.database.re-create}"
						database.drop-schema="${upt.41.database.drop-schema}"
						db.install.dir="${working.dir}/${db-install.dist.relative.dir}/db-install/${backwards.compatible.upt.dist.relative.dir}/upt41"
						db.install.create.oracle.file.list="${upt.41.db.install.create.oracle.file.list}"
						db.install.create.mysql.file.list="${upt.41.db.install.create.mysql.file.list}"
						db.install.create.postgresql.file.list="${upt.41.db.install.create.postgres.file.list}"
					/>
			</then>
		</if>
		<if>
			<equals arg1="${upt.42.database.re-create}" arg2="true" />
			<then>
				<install-backwards-compatible-upt-database 	
						database.driver="${upt.42.database.driver.class}" database.system.url="${upt.42.database.url}" 
						database.system.user="${upt.42.database.system.user}" database.system.password="${upt.42.database.system.password}" 
						database.url="${upt.42.database.url}" database.user="${upt.42.database.user}" 
						database.password="${upt.42.database.password}" database.version="${upt.42.database.version}" 
						database.name="${upt.42.database.name}" database.type="${upt.42.database.type}"
						database.schema="${upt.42.database.schema}"  database.re-create="true" 
						database.drop-schema="${upt.42.database.drop-schema}"
						db.install.dir="${working.dir}/${db-install.dist.relative.dir}/db-install/${backwards.compatible.upt.dist.relative.dir}/upt42"
						db.install.create.oracle.file.list="${upt.42.db.install.create.oracle.file.list}"
						db.install.create.mysql.file.list="${upt.42.db.install.create.mysql.file.list}"
						db.install.create.postgresql.file.list="${upt.42.db.install.create.postgres.file.list}"
					/>
			</then>
		</if>
	</target>
	
	<target name="-copy-backwards-compatible-properties">
		<echo message="Copying build files" />
		<copy todir="${dist.exploded.dir}" overwrite="true">
			<fileset dir="${build.dir}">
				<include name="bda-master-install.xml" />
				<include name="install-upt.xml" />
				<include name="install-cgmmweb.xml" />
				<include name="install-backwards-compatible-upt.xml" />
			</fileset>
			<fileset dir="${backwards.compatible.upt.resources.dir}">
				<include name="*ApplicationSecurityConfig.xml" />
				<include name="*backwards_compatible_upt-ds-template.xml" />
				<include name="*login-config-template.xml" />
				<include name="*csmupt31.hibernate.cfg.xml" />
			</fileset>
			<filterset>
				<filterset>
					<filtersfile file="${properties.file}"/>
					<filtersfile file="project.properties"/>
				</filterset>
			</filterset>
		</copy>
		<copy tofile="${dist.exploded.dir}/install.properties" file="${build.dir}/install-backwards-compatible-upt.properties" overwrite="true"/>
		<copySQLFiles upt.version="upt31" />
		<copySQLFiles upt.version="upt32" />
		<copySQLFiles upt.version="upt40" />
		<copySQLFiles upt.version="upt41" />
	
		<copy todir="${dist.exploded.dir}/common/resources/db/db-install/${backwards.compatible.upt.dist.relative.dir}/upt31/mysql" overwrite="true">
			<fileset dir="${target.dir}/${backwards.compatible.upt.dist.relative.dir}/svncheckout/upt31/resources">
				<include name="*MySQL.sql" />
			</fileset>
		</copy>
		<copy todir="${dist.exploded.dir}/common/resources/db/db-install/${backwards.compatible.upt.dist.relative.dir}/upt31/oracle" overwrite="true">
			<fileset dir="${target.dir}/${backwards.compatible.upt.dist.relative.dir}/svncheckout/upt31/resources">
				<include name="*Oracle.sql" />
			</fileset>
		</copy>
	</target>
	
	<macrodef name="configure-login-config">
		<attribute name="authentication.type" default="NOT SET" />
		<attribute name="ldaps.url" default="NOT SET" />
		<attribute name="ldaps.basedn" default="NOT SET" />
		<attribute name="ldaps.userid.label" default="NOT SET" />
		<attribute name="ldap.url" default="NOT SET" />
		<attribute name="ldap.searchable.base" default="NOT SET" />
		<attribute name="ldap.userid.label" default="NOT SET" />
		<attribute name="ldap.admin.user.name" default="NOT SET" />
		<attribute name="ldap.admin.user.password" default="NOT SET" />
		<attribute name="database.driver" default="NOT SET" />
		<attribute name="database.url" default="NOT SET" />
		<attribute name="database.user" default="NOT SET" />
		<attribute name="database.password" default="NOT SET" />
		<attribute name="database.encrypt.enabled" default="NOT SET" />

		<sequential>
			<if>
				<equals arg1="@{authentication.type}" arg2="ldaps" />
				<then>
					<xmltask preservetype="true" failWithoutMatch="true"
						source="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml"
						dest="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml">
						<xmlcatalog refid="bda.xml.catalog" />
						<insert
							path="//policy/application-policy[@name='${application.context.name}']/authentication"
							position="under">
							<![CDATA[
								<login-module
									code="gov.nih.nci.security.authentication.loginmodules.LDAPLoginModule" flag="sufficient">
									<module-option name="ldapHost">@{ldaps.url}@</module-option>
									<module-option name="ldapSearchableBase">@{ldaps.basedn}@</module-option>
									<module-option name="ldapUserIdLabel">@{ldaps.userid.label}@</module-option>
								</login-module>
							]]>
						</insert>
					 </xmltask>
				</then>
			 <elseif>
					<equals arg1="@{authentication.type}" arg2="ldap" />
					<then>
						<xmltask preservetype="true" failWithoutMatch="true"
								source="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml"
								dest="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml">
							<xmlcatalog refid="bda.xml.catalog" />
							<insert
									path="//policy/application-policy[@name='${application.context.name}']/authentication"
									position="under">
								<![CDATA[			
								 <login-module
									code="gov.nih.nci.security.authentication.loginmodules.LDAPLoginModule" flag="sufficient">
									<module-option name="ldapHost">@{ldap.url}@</module-option>
									<module-option name="ldapSearchableBase">@{ldap.searchable.base}@</module-option>
									<module-option name="ldapUserIdLabel">@{ldap.userid.label}</module-option>
									<module-option name="ldapAdminUserName">@{ldap.userid.label}</module-option>
									<module-option name="ldapAdminPassword">@{ldap.userid.password}</module-option>
								</login-module>
								]]>
								</insert>
						</xmltask>
					</then>
			</elseif>
			<elseif>
					<equals arg1="@{authentication.type}" arg2="db" />
					<then>
						<xmltask preservetype="true" failWithoutMatch="true"
								source="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml"
								dest="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml">
							<xmlcatalog refid="bda.xml.catalog" />
							<insert
									path="//policy/application-policy[@name='${application.context.name}']/authentication"
									position="under">
								<![CDATA[			
								 <login-module
									code="gov.nih.nci.security.authentication.loginmodules.RDBMSLoginModule" flag="sufficient">
									<module-option name="driver">@{database.driver}</module-option>
									<module-option name="url">@{database.url}</module-option>
									<module-option name="user">@{database.user}</module-option>
									<module-option name="passwd">@{database.password}</module-option>
									<module-option name="query">SELECT * FROM CSM_USER WHERE LOGIN_NAME=? and PASSWORD=?</module-option>
									<module-option name="encryption-enabled">@{database.encrypt.enabled}</module-option>
								</login-module>
								]]>
								</insert>
						</xmltask>
					</then>
			 </elseif>
			 <else>
					<fail message="@{authentication.type} is not a valid authentiation type, please change to db or ldap and re-run the build." />
			 </else>
		   </if>
		</sequential>
	</macrodef>

	<macrodef name="configure-datasources">
			<attribute name="database.user" default="NOT SET" />
			<attribute name="database.password" default="NOT SET" />
			<attribute name="database.url" default="NOT SET" />
			<attribute name="jndi.name" default="NOT SET" />
			<attribute name="driver.class" default="NOT SET" />
	
			<sequential>
				<!-- configure database mysql-ds.xml
				<xmltask preservetype="true"
					source="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml"
					dest="${jboss.home}/server/${jboss.server.name}/conf/login-config.xml">
					<xmlcatalog refid="bda.xml.catalog" />
					<remove
						path="//policy/application-policy[@name='${application.context.name}']" />
				</xmltask> -->
				<xmltask preservetype="true" failWithoutMatch="true"
								source="${jboss.home}/server/${jboss.server.name}/deploy/backwards_compatible_upt-ds.xml"
								dest="${jboss.home}/server/${jboss.server.name}/deploy/backwards_compatible_upt-ds.xml">
					<xmlcatalog refid="bda.xml.catalog" />
					<insert path="//datasources" position="under">
						<![CDATA[						
						<local-tx-datasource>
							<jndi-name>@{jndi.name}</jndi-name>
							<driver-class>@{driver.class}</driver-class>
							<connection-url>@{database.url}</connection-url>
							<user-name>@{database.user}</user-name>
							<password>@{database.password}</password>
						</local-tx-datasource>
					   	]]>
					</insert>
				</xmltask>
			</sequential>
	</macrodef>

	<macrodef name="configure-application-context">
			<attribute name="context.name" default="NOT SET" />
			<attribute name="url.context.name" default="NOT SET" />
			<attribute name="hibernate.config.file" default="NOT SET" />
			
			<sequential>
				<xmltask preservetype="true" failWithoutMatch="true" source="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml" dest="${jboss.home}/server/${jboss.server.name}/csmconfig/ApplicationSecurityConfig.xml">
					<xmlcatalog refid="bda.xml.catalog" />
					<insert path="//security-config/backwards-compatibility/upt-application-list" position="under">
						<![CDATA[
						<upt-application>
						<context-name>@{context.name}</context-name>
						<url-context-name>@{url.context.name}</url-context-name>
						<authorization>
							<authorization-provider-class>String</authorization-provider-class>
							<hibernate-config-file>@{hibernate.config.file}</hibernate-config-file>
						</authorization>
						</upt-application>
						]]>
				     </insert>
				</xmltask>
			</sequential>
	</macrodef>
	
	<!-- <database-upgrade
				database.changelog.file="${os.temp.dir}/${project.name}/db-upgrade.xml"
		 />
		 <database-tag/>							
	-->
	<macrodef name="install-backwards-compatible-upt-database">
			<attribute name="database.driver" default="NOT SET" />
			<attribute name="database.system.url" default="NOT SET" />
			<attribute name="database.system.user" default="NOT SET" />
			<attribute name="database.system.password" default="NOT SET" />
			<attribute name="database.url" default="NOT SET" />
			<attribute name="database.user" default="NOT SET" />
			<attribute name="database.password" default="NOT SET" />
			<attribute name="database.version" default="NOT SET" />
			<attribute name="database.name" default="NOT SET" />
			<attribute name="database.type" default="NOT SET"/>
			
			<attribute name="database.schema" default="NOT SET"/>
			<attribute name="database.re-create" default="NOT SET"/>
			<attribute name="database.drop-schema" default="NOT SET"/>
			
			<attribute name="db.install.dir" default="NOT SET"/>
			<attribute name="db.install.create.oracle.file.list" default="NOT SET"/>
			<attribute name="db.install.create.mysql.file.list" default="NOT SET"/>
			<attribute name="db.install.create.postgresql.file.list" default="NOT SET"/>
			
			<sequential>
				<!--
				<antcall target="common:init" inheritall="true">
					<param name="database.url" value="@{database.url}"/>
					<param name="database.user" value="@{database.user}"/>
					<param name="database.password" value="@{database.password}"/>
					<param name="database.name" value="@{database.name}"/>
					<param name="database.type" value="@{database.type}"/>					
				</antcall>	-->			
				<switch value="${database.type}">
					<case value="oracle">
						<property name="database.driver.file" value="${bda-utils.dir}/ojdbc14-10.2.0.4.0.jar"/>
						<property name="database.driver" value="oracle.jdbc.driver.OracleDriver"/>
					</case>
					<case value="mysql">
						<property name="database.driver.file" value="${bda-utils.dir}/mysql-connector-java-5.0.8.jar"/>
						<property name="database.driver" value="com.mysql.jdbc.Driver"/>
					</case>
					<case value="postgresql">
						<property name="database.driver.file" value="${bda-utils.dir}/postgresql-jdbc3-8.3-604.jar"/>
						<property name="database.driver" value="org.postgresql.Driver"/>
					</case>
					<default>
						<fail message="Invalid database type ${database.type}"/>
					</default>
				</switch>				
				<antcall target="install:database:prep" inheritall="true">
					<param name="database.url" value="@{database.url}"/>
					<param name="database.user" value="@{database.user}"/>
					<param name="database.password" value="@{database.password}"/>
					<param name="database.name" value="@{database.name}"/>
					<param name="database.type" value="@{database.type}"/>
				</antcall>
				<antcall target="install:common:validation:pre-install" inheritall="true"/>
				<validate-pre-install-database 
										database.driver="@{database.driver}" database.system.url="@{database.system.url}" 
										database.system.user="@{database.system.user}" database.system.password="@{database.system.password}" 
										database.url="@{database.url}" database.user="@{database.user}" 
										database.password="@{database.password}" database.version="@{database.version}" 
										database.name="@{database.name}" database.type="@{database.type}" />
				<echo message="${database.driver.file}"/>
				<database-clean	 
										database.driver="@{database.driver}" database.system.url="@{database.system.url}" 
										database.system.user="@{database.system.user}" database.system.password="@{database.system.password}" 
										database.url="@{database.url}" database.user="@{database.user}" 
										database.password="@{database.password}" database.version="@{database.version}" 
										database.name="@{database.name}" database.schema="@{database.schema}" 
										database.re-create="@{database.re-create}" 
										database.drop-schema="@{database.drop-schema}" />
				
				<switch value="${database.type}">
					<case value="oracle">
						<database-install		
										db.install.create.file.list="@{db.install.create.oracle.file.list}"
										db-install.dir="@{db.install.dir}"
										sql.delimiter="/" sql.delimitertype="row"
										database.url="@{database.url}"
										database.user="@{database.user}"
										database.password="@{database.password}"						
												  	/>
					</case>
					<case value="postgresql">
						<database-install
										db.install.create.file.list="@{db.install.create.postgresql.file.list}"
										db-install.dir="@{db.install.dir}" 
										sql.delimiter="/" sql.delimitertype="row"
										database.url="@{database.url}"
										database.user="@{database.user}"
										database.password="@{database.password}"							
													/>
					</case>
					<case value="mysql">
						<database-install
										db.install.create.file.list="@{db.install.create.mysql.file.list}"
										db-install.dir="@{db.install.dir}"
										database.url="@{database.url}"
										database.user="@{database.user}"
										database.password="@{database.password}"
													/>
					</case>
				</switch>
				
			</sequential>
	</macrodef>
</project>