<?xml version="1.0" encoding="utf-8" ?>
<!-- bda-build-template version 1.0.1 -->
<!--
$Id: install.xml 1593 2009-04-27 21:29:25Z saksass $
$HeadURL: https://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-build-template/software/build/install.xml $
-->
<project name="csm-installer" default="upgrade" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<description>
		Builds the CSM/UPT application.
	</description>
	<property file="local.properties" />
	<property file="project.properties" />

	<property name="jboss.grid.configure" value="false"/>
	<property name="tomcat.grid.configure" value="false"/>

	<!-- Generic properties -->
	<property name="project.name" value="${project.name}" />

	<property name="bda-blueprints-webapp.install.zip.file" value="${csm.install.zip.file}"/>
	<property name="bda-blueprints-webapp.upgrade.zip.file" value="${csm.upgrade.zip.file}"/>

	<property name="db-upgrade.dist.dir" value="${dist.exploded.dir}/${db-upgrade.dist.relative.dir}" />

	<!-- *-ds.xml and WAR -->
	<property name="upt.dir.dist" value="${basedir}/${upt.dist.relative.dir}" />
	<property name="upt.ds.file" value="upt-ds.xml" />
	<property name="upt.ds.tomcat.file" value="upt.xml" />
	<property name="upt.app-sec-conf.file" value="ApplicationSecurityConfig.xml" />
	<property name="upt.war.file" value="upt.war" />

	<property name="upt-webapp.name" value="upt" />
	<property name="jboss.application.url" value="http://${jboss.server.hostname}:${jboss.server.port}/${upt-webapp.name}"/>
	<property name="tomcat.application.url" value="http://${tomcat.hostname}:${tomcat.port.http}/${upt-webapp.name}"/>

	<import file="bda-master-install.xml" />

	<!-- Wrapper target to deploy JBOSS container -->
	<target name="install:jboss" description="Wrapper scripts that calls all required targets to install the jboss container" unless="exclude.jboss" depends="
		-set:jboss:application:url,
		common:jboss:init,
		common:init,
		install:jboss:init,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:validation:pre-install:ports,
		install:jboss:clean,
		install:jboss:binaries,
		install:jboss:upt-webapp,
		install:jboss:upt-webapp:configure,
		install:jboss:configure,
		install:post:jboss,
		install:jboss:start,
		install:jboss:validation:post-install
		">
	</target>

	<target name="install:tomcat" description="Wrapper scripts that calls all required targets to install the tomcat container" unless="exclude.tomcat" depends="
		-set:tomcat:application:url,
		common:tomcat:init,
		common:init,
		install:tomcat:validation:pre-install,
		install:tomcat:stop,
		install:tomcat:validation:pre-install:ports,
		install:tomcat:clean,
		install:tomcat:binaries,
		install:tomcat:configure,
	   -install:tomcat:configure:login-conf,
		install:tomcat:upt-webapp,
		install:tomcat:upt-webapp:configure,
		install:post:tomcat,
		install:tomcat:start,
		install:tomcat:validation:post-install
		">
	</target>

	<target name="-set:tomcat:application:url">
		<property name="tomcat.application.url" value="http://${tomcat.hostname}:${tomcat.port.http}/${upt-webapp.name}"/>
	</target>

	<target name="-set:jboss:application:url">
		<property name="jboss.application.url" value="http://${jboss.server.hostname}:${jboss.server.port}/${upt-webapp.name}"/>
	</target>

	<target name="re-configure-war">
		<property name="temp.war.dir" value="tempWAR" />
		<property name="temp.file.dir" value="tempfile" />
		<unzip dest="${temp.war.dir}" src="${upt.dir.dist}/${upt.war.file}" />

		<if>
			<equals arg1="${exclude.tomcat}" arg2="true" />
			<then>
				<property name="application.jndi" value="/" />
				<delete file="${temp.war.dir}/WEB-INF/lib/commons-logging-1.0.4.jar" quiet="true" />
				<delete file="${temp.war.dir}/WEB-INF/lib/log4j-1.2.9.jar" quiet="true" />				
			</then>
			<else>
				<property name="application.jndi" value="comp/env/" />
			</else>
		</if>

		<copy file="${temp.war.dir}/WEB-INF/classes/csmupt.csm.new.hibernate.cfg.xml" todir="${temp.file.dir}" filtering="true">
			<filterset>
				<filter token="application.jndi" value="${application.jndi}"/>
				<filter token="application.context.name" value="${application.context.name}"/>
			</filterset>
		</copy>
		<copy file="${temp.file.dir}/csmupt.csm.new.hibernate.cfg.xml" todir="${temp.war.dir}/WEB-INF/classes" overwrite="true"/>
			
		<!-- Create ear file and place in ear directory -->
		<jar jarfile="${upt.dir.dist}/${upt.war.file}" basedir="${temp.war.dir}" />
		<delete dir="${temp.war.dir}" quiet="true" />
		<delete dir="${temp.file.dir}" quiet="true" />
	</target>

	<target name="install:jboss:upt-webapp" description="Deploy bda-blueprints-webapp and common libraries to jboss installation" unless="exclude.jboss" depends="common:init,re-configure-war">
		<delete dir="${jboss.home}/server/${jboss.server.name}/tmp" />
		<delete dir="${jboss.home}/server/${jboss.server.name}/work" />
		<move file="${jboss.home}/server/${jboss.server.name}/log/server.log" tofile="${jboss.home}/server/${jboss.server.name}/log/server/log.${install.time}" failonerror="false" />

		<copy file="${upt.dir.dist}/${upt.war.file}" todir="${jboss.home}/server/${jboss.server.name}/deploy" overwrite="true" />
		<copy file="${database.driver.file}" todir="${jboss.home}/server/${jboss.server.name}/lib" overwrite="true" />
	</target>

	<target name="install:jboss:upt-webapp:configure" description="Configure bda-blueprints-webapp application, copies over externalized properties or configurations that are not part of the jboss configuration" unless="exclude.jboss" depends="common:init">
		<!-- copy datasource file -->
		<copy file="${working.dir}/${jboss-conf.dist.relative.dir}/${upt.ds.file}" todir="${jboss.home}/server/${jboss.server.name}/deploy" overwrite="true" />
		<!-- This code is for updating properties.service.xml, make sure to add ${line.separator} after each property def as the property delimiter, if this is not included you will not get the desired results. If you do not use properties service.xml you can delete this code. -->
		<var name="property.block" value="property1=${authentication.type}${line.separator}
					property2=${env.name}${line.separator}
					property3=${jboss.home}${line.separator}
					property4=${tomcat.home}${line.separator}
					" />
		<copy file="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml" tofile="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml.orig" overwrite="true" />
		<jboss-update-properties-service property.block="${property.block}" />
	</target>

	<target name="-install:tomcat:configure:login-conf" unless="exclude.tomcat">
		<if>
			<equals arg1="${authentication.type}" arg2="ldap" />
			<then>
				<copy file="${tomcat-conf.dist.relative.dir}/login-ldap.config" tofile="${tomcat.home}/conf/login.config" >
					<filterset>
						<filterset refid="embedded.filterset"/>
					</filterset>
				</copy>
			</then>
			<else>
				<if>
					<equals arg1="${authentication.type}" arg2="db" />
					<then>
						<copy file="${tomcat-conf.dist.relative.dir}/login-db.config" tofile="${tomcat.home}/conf/login.config">
							<filterset>
								<filterset refid="embedded.filterset"/>
							</filterset>
						</copy>
					</then>
					<else>
						<fail message="${authentication.type} is not a valid authentiation type, please change to db or ldap and re-run the build." />
					</else>
				</if>
			</else>
		</if>
		<echo message="Inserting ${login.config path} into ${tomcat.home}/conf/catalina.properties" />
		<propertyfile file="${tomcat.home}/conf/catalina.properties" comment="append login.config file path">
			<entry key="gov.nih.nci.security.configFile" value="${catalina.home}/conf/login.config" />
		</propertyfile>
	</target>

	<target name="install:tomcat:upt-webapp" description="Deploy bda-blueprints-webapp and common libraries to tomcat installation" unless="exclude.tomcat" depends="common:init,re-configure-war">
		<delete dir="${tomcat.home}/temp" />
		<delete dir="${tomcat.home}/work" />
		<copy file="${upt.dir.dist}/${upt.war.file}" todir="${tomcat.home}/webapps" overwrite="true" />
		<copy file="${database.driver.file}" todir="${tomcat.home}/common/lib" overwrite="true" />
	</target>

	<target name="install:tomcat:upt-webapp:configure" description="Configure bda-blueprints-webapp application, copies over externalized properties or configurations that are not part of the tomcat configuration" unless="exclude.tomcat" depends="common:init">
		<!-- configure datasource -->
		<copy file="${working.dir}/${tomcat-conf.dist.relative.dir}/${upt.ds.tomcat.file}" todir="${tomcat.home}/conf/Catalina/localhost" overwrite="true" />
	</target>

	<!-- Upgrade with No Container Modification (NCM) -->
	<target name="upgrade-ncm:jboss" description="Wrapper target to call all targets required to upgrade jboss container." unless="exclude.jboss"
		depends="
		upgrade:jboss:init,
		common:init,
		common:jboss:init,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:validation:pre-install:ports,
		install:jboss:upt-webapp,
		install:jboss:upt-webapp:configure,
		install:post:jboss,
		install:jboss:start,
		install:jboss:validation:post-install
		">
	</target>
	
	<target name="upgrade:jboss:readers:bda" if="jboss.exists">
		<properties-exist
			properties.list="application.base.path,jboss.home,jboss.server.name"
			/>
		<osfamily property="os.family"/>
		<if>
			<or>
				<equals arg1="${os.family}" arg2="unix"/>
				<equals arg1="${os.family}" arg2="mac"/>
			</or>
			<then>
				<property name="jboss.server.hostname" value="${env.HOSTNAME}"/>
			</then>
		</if>
		<if>
			<equals arg1="${os.family}" arg2="windows"/>
			<then>
				<property name="jboss.server.hostname" value="${env.COMPUTERNAME}"/>
			</then>
		</if>
		<jboss-read-bindings-file-location
			jboss.home="${read.jboss.home}"
			/>
		<jboss-read-ports
			/>
		<read-property-from-properties-service
			jboss.home="${read.jboss.home}"
			property.name="property1"
			/>
		<read-property-from-properties-service
			jboss.home="${read.jboss.home}"
			property.name="property2"
			/>
	</target>
</project>