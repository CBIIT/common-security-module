<?xml version="1.0" encoding="utf-8" ?>
<!-- bda-build-template version 1.0.1 -->
<!--
$Id: install.xml 1593 2009-04-27 21:29:25Z saksass $
$HeadURL: https://gforge.nci.nih.gov/svnroot/automation/trunk/software/bda-build-template/software/build/install.xml $
-->

<project name="csm-installer" default="install:jboss:upt" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<import file="bda-master-install.xml" />
		
	<!-- Generic properties -->
	<property name="project.name" value="csm-upt" />

	<!-- *-ds.xml and WAR -->
	<!-- *-ds.xml and WAR -->
	<property name="upt.dir.dist" value="${basedir}/${upt.dist.relative.dir}" />
	<property name="upt.ds.file" value="upt-ds.xml" />
	<property name="upt.ds.tomcat.file" value="upt.xml" />
	<property name="upt.app-sec-conf.file" value="ApplicationSecurityConfig.xml" />
	<property name="upt.hibernate.file" value="hibernate.cfg.xml" />
	<property name="upt.war.file" value="upt.war" />
	<property name="securityws.dir.dist" value="${basedir}/${securityws.dist.relative.dir}" />
	<property name="securityws.war.file" value="securityws.war" />
	<property name="clm.jar.file" value="clm-4.1.jar" />

	<target name="install:jboss:upt-webapp" description="Deploy bda-blueprints-webapp and common libraries to jboss installation" unless="exclude.jboss" depends="common:init">
		<!-- added to ensure working.dirs are fresh for our install -->
		<delete dir="${jboss.home}/server/${jboss.server.name}/tmp" />
		<delete dir="${jboss.home}/server/${jboss.server.name}/work" />
		<move file="${jboss.home}/server/${jboss.server.name}/log/server.log" tofile="${jboss.home}/server/${jboss.server.name}/log/server/log.${install.time}" failonerror="false" />

		<copy file="${upt.dir.dist}/${upt.war.file}" todir="${jboss.home}/server/${jboss.server.name}/deploy" overwrite="true" />
		<!--  Many NCI applications require clm for csm, so you can point this to where you have the version you want to use
		<copy file="${bda-utils.dir}/clm-3.2.jar" todir="${jboss.home}/server/${jboss.server.name}/lib" overwrite="true" />
		-->
		<copy file="${database.driver.file}" todir="${jboss.home}/server/${jboss.server.name}/lib" overwrite="true" />
	</target>

	<target name="install:jboss:upt-webapp:configure" description="Configure bda-blueprints-webapp application, copies over externalized properties or configurations that are not part of the jboss configuration" unless="exclude.jboss" depends="common:init">
		<!-- copy over any other files you may need to configure your application -->

		<!-- copy datasource file -->
		<copy file="${working.dir}/${jboss-conf.dist.relative.dir}/${upt.ds.file}" todir="${jboss.home}/server/${jboss.server.name}/deploy" overwrite="true" />
		<!-- copy JBoss-web.xml file -->
		<!--
		<copy file="${jboss-conf.dir.dest}/${jboss.web.xml.file}" todir="${jboss.home}/server/${jboss.server.name}/deploy" overwrite="true" />
		-->
		<!-- This code is for updating properties.service.xml, make sure to add ${line.separator} after each property def as the property delimiter, if this is not included you will not get the desired results. If you do not use properties service.xml you can delete this code. -->
		<var name="property.block" value="property1=${authentication.type}${line.separator}
			property2=${env.name}${line.separator}
			property3=${jboss.home}${line.separator}
			property4=${tomcat.home}${line.separator}
			" />
		<copy file="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml" tofile="${jboss.home}/server/${jboss.server.name}/deploy/properties-service.xml.orig" overwrite="true" />
		<jboss-update-properties-service property.block="${property.block}" />
	</target>


	<!-- Wrapper target to deploy JBOSS container -->
	<target name="install:jboss:upt" description="Wrapper scripts that calls all required targets to install the jboss container" unless="exclude.jboss" depends="
		common:jboss:init,
		common:init,
		install:jboss:init,
		install:jboss:validation:pre-install,
		install:jboss:stop,
		install:jboss:validation:pre-install:ports,
		install:jboss:clean,
		install:jboss:binaries,
		install:jboss:upt-webapp:re-configure,
		install:jboss:upt-webapp,
		install:jboss:upt-webapp:configure,
		install:jboss:configure,
		install:jboss:grid,
		install:jboss:grid:configure,
		install:post:jboss,
		install:jboss:start,
		install:jboss:validation:post-install
		">
	</target>

	<target name="install:tomcat:upt" description="Wrapper scripts that calls all required targets to install the tomcat container" unless="exclude.tomcat" depends="
		common:tomcat:init,
		common:init,
		install:tomcat:validation:pre-install,
		install:tomcat:stop,
		install:tomcat:validation:pre-install:ports,
		install:tomcat:clean,
		install:tomcat:binaries,
		install:tomcat:configure,
		install:tomcat:upt-webapp:re-configure,
		install:tomcat:upt-webapp,
		install:tomcat:upt-webapp:configure,
		install:tomcat:grid,
		install:tomcat:grid:configure,
		install:post:tomcat,
		install:tomcat:start,
		install:tomcat:validation:post-install
		">
	</target>

	<target name="install:jboss:upt-webapp:re-configure" description="Update contents of artifacts if not all properties have been externalized, by extracting artifact, modify it as needed and re-archive it." unless="exclude.jboss" depends="common:init">
		<!-- This is only required if configuration files are not externalized, below is a sample of what you may do.
		<delete dir="${working.dir}/bda-blueprints-webapp"/>
		<unzip src="${bda-blueprints-webapp.dir.dist}/${bda-blueprints-webapp.war.file}" dest="${working.dir}/bda-blueprints-webapp"/>
		<copy todir="${working.dir}/bda-blueprints-webapp/WEB-INF/classes" file="${jboss-conf.dir.dest}/hibernate.cfg.xml"/>
		
		<move file="${bda-blueprints-webapp.dir.dist}/${bda-blueprints-webapp.war.file}" tofile="${bda-blueprints-webapp.dir.dist}/${bda-blueprints-webapp.war.file}.orig"/>
		<war destfile="${bda-blueprints-webapp.dir.dist}/${bda-blueprints-webapp.war.file}" compress="false" webxml="${working.dir}/bda-blueprints-webapp/WEB-INF/web.xml" >
			<fileset dir="${working.dir}/bda-blueprints-webapp">
				<include name="*/**" />
			</fileset>
		</war>  
		-->
	</target>


	<target name="install:tomcat:upt-webapp" description="Deploy bda-blueprints-webapp and common libraries to tomcat installation" unless="exclude.tomcat" depends="common:init">		
		<delete dir="${tomcat.home}/temp" />
		<delete dir="${tomcat.home}/work" />
		<copy file="${upt.dir.dist}/${upt.war.file}" todir="${tomcat.home}/webapps" overwrite="true" />
		<!--  Many NCI applications require clm for csm, so you can point this to where you have the version you want to use
		<copy file="${bda-utils.dir}/clm-3.2.jar" todir="${tomcat.home}/server/${tomcat.server.name}/lib" overwrite="true" />
		-->
		<copy file="${database.driver.file}" todir="${tomcat.home}/common/lib" overwrite="true" />
	</target>

	<target name="install:tomcat:upt-webapp:configure" description="Configure bda-blueprints-webapp application, copies over externalized properties or configurations that are not part of the tomcat configuration" unless="exclude.tomcat" depends="common:init">
		<!-- configure datasource -->
		<copy file="${working.dir}/${tomcat-conf.dist.relative.dir}/${upt.ds.tomcat.file}" todir="${tomcat.home}/conf/Catalina/localhost" overwrite="true" />
	</target>
	<target name="install:tomcat:upt-webapp:re-configure" description="Configure bda-blueprints-webapp application, copies over externalized properties or configurations that are not part of the tomcat configuration" unless="exclude.tomcat" depends="common:init">
	</target>

</project>
