<!--Build Script for NCICB_COMMON_SECURITY_API-->

<project name="security-api" default="all" basedir="..">

	<!-- Load variable definitions from local.properties -->
	<property name="localProperties" value="./local.properties" />
	<property file="${basedir}/local.properties" />
	<property name="LIB" location="lib"/>
    <property name="SRC" location="src"/>
    <property name="BUILD" location="build"/>
	<property name="DOCS" location="${BUILD}/docs"/>
	<property name="JAR_FILE" location="${BUILD}/csmapi.jar"/>
	
	<!-- Create the Java Doc -->
	<target name="javadoc" depends="init"
		description="Create Javadoc">
		<javadoc destdir="${DOCS}" author="true" version="true"
			use="true" package="true">

			<fileset dir="${SRC}">
				<include name="**/*.java" />
			</fileset>
			<classpath>
				<fileset dir="${LIB}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javadoc>
		<echo message="Javadoc complete" />
	</target>

	<!-- Execute all the tasks -->
	<target name="all" depends="init,compile,unitTest,javadoc,buildJar" />
	<path id="security-api.path">
		<fileset dir="${LIB}">
			<include name="**/*.jar" />
		</fileset>
	</path>


	<!-- Compile the source -->
	<target name="compile">

		<echo>Attempting to Compile...</echo>
		<mkdir dir="${BUILD}" />
		<mkdir dir="${DOCS}" />
		<javac srcdir="${SRC}" destdir="${BUILD}"
			classpathref="security-api.path" debug="on" />

		<echo>Compile complete.</echo>

	</target>

	<!-- Run the Junit Suite -->
	<target name="unitTest" depends="init, compile"
		description="Unit test component">
		<junit>
			<test name="test.gov.nih.nci.security.SecurityTestSuite" todir="${BUILD}"/>
			
		</junit>
	</target>

	<!-- Copy the source to the build directory -->
	<target name="copySource" depends="compile">
		<echo>Attempting to copy Source...</echo>
		<copy todir="${BUILD}">
			<fileset dir="${SRC}" includes="**/*.java" />
			<fileset dir="${SRC}" includes="**/*.xml" />
			<fileset dir="${SRC}" includes="**/*.properties" />
		</copy>
		<echo>Finished copying files</echo>
	</target>
	

	<!-- JAR the build directory -->
	<target name="buildJar" depends="copySource">
		<echo>Building Codebase Jar..</echo>
		<jar jarfile="${JAR_FILE}" basedir="${BUILD}" />
		<echo>Codebase Jar Complete..</echo>
	</target>



	<!-- Clean first then build -->
	<target name="rebuild" depends="clean,buildJar" />
	<target name="clean">
		<delete dir="${BUILD}" />
	</target>

	<!-- Initialize local.properties -->
	<target name="init">

		<!-- Has the file been created before -->
		<available file="${localProperties}"
			property="haveLocalProperties" />
		<antcall target="local.properties" />

		<property file="${localProperties}" />
	</target>


	<target name="local.properties" unless="haveLocalProperties">
		<echo>Creating default local properties file</echo>
		<echo file="${localProperties}">
			# NOTE: Be sure to escape all '\' with '\\'

			########################## #Per computer settings

			#General options

			# Directory where the sso code exists (Basically where this
			file is)

			PROPERTY_FILE=${localProperties}

			# End of per computer settings ##########################

		</echo>
	</target>

</project>
